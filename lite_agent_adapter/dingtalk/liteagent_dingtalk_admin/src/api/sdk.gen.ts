// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { CreateRobotPermissionData, CreateRobotPermissionResponses, CreateRobotPermissionErrors, UpdateAgentPermissionData, UpdateAgentPermissionResponses, UpdateAgentPermissionErrors, DeleteAgentRobotRefData, DeleteAgentRobotRefResponses, DeleteAgentRobotRefErrors, ListStarredAgentsData, ListStarredAgentsResponses, ListStarredAgentsErrors, CreateAgentRobotRefData, CreateAgentRobotRefResponses, CreateAgentRobotRefErrors, UpdateAgentRobotRefData, UpdateAgentRobotRefResponses, UpdateAgentRobotRefErrors, GetVersionInfoData, GetVersionInfoResponses, GetVersionInfoErrors, RefreshTokenData, RefreshTokenResponses, RefreshTokenErrors, LogoutData, LogoutResponses, LogoutErrors, GetVersionInfo1Data, GetVersionInfo1Responses, GetVersionInfo1Errors, GetAgentPermissionsData, GetAgentPermissionsResponses, GetAgentPermissionsErrors, GetVersionInfo2Data, GetVersionInfo2Responses, GetVersionInfo2Errors, GetUserInfoData, GetUserInfoResponses, GetUserInfoErrors, LoginData, LoginResponses, LoginErrors, DeleteAgentPermissionData, DeleteAgentPermissionResponses, DeleteAgentPermissionErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * 创建Robot权限
 * 创建一个新的Robot权限配置
 */
export const createRobotPermission = <ThrowOnError extends boolean = false>(options: Options<CreateRobotPermissionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateRobotPermissionResponses, CreateRobotPermissionErrors, ThrowOnError>({
        url: '/api/robot/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新Robot权限
 * 更新Robot权限配置
 */
export const updateAgentPermission = <ThrowOnError extends boolean = false>(options: Options<UpdateAgentPermissionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateAgentPermissionResponses, UpdateAgentPermissionErrors, ThrowOnError>({
        url: '/api/robot/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 删除Agent与机器人绑定
 * 删除一个Agent与机器人的绑定
 */
export const deleteAgentRobotRef = <ThrowOnError extends boolean = false>(options: Options<DeleteAgentRobotRefData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAgentRobotRefResponses, DeleteAgentRobotRefErrors, ThrowOnError>({
        url: '/api/robot/agentRef',
        ...options
    });
};

/**
 * 获取Agent与机器人绑定列表
 */
export const listStarredAgents = <ThrowOnError extends boolean = false>(options: Options<ListStarredAgentsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ListStarredAgentsResponses, ListStarredAgentsErrors, ThrowOnError>({
        url: '/api/robot/agentRef',
        ...options
    });
};

/**
 * 创建Agent与机器人绑定
 * 创建一个新的Agent与机器人的绑定
 */
export const createAgentRobotRef = <ThrowOnError extends boolean = false>(options: Options<CreateAgentRobotRefData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateAgentRobotRefResponses, CreateAgentRobotRefErrors, ThrowOnError>({
        url: '/api/robot/agentRef',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 更新Agent与机器人绑定
 * 更新一个Agent与机器人的绑定
 */
export const updateAgentRobotRef = <ThrowOnError extends boolean = false>(options: Options<UpdateAgentRobotRefData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateAgentRobotRefResponses, UpdateAgentRobotRefErrors, ThrowOnError>({
        url: '/api/robot/agentRef',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 获取部门用户列表
 * 获取部门用户列表
 */
export const getVersionInfo = <ThrowOnError extends boolean = false>(options: Options<GetVersionInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetVersionInfoResponses, GetVersionInfoErrors, ThrowOnError>({
        url: '/api/department/user/list',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * 刷新令牌
 * 使用刷新令牌获取新的访问令牌
 */
export const refreshToken = <ThrowOnError extends boolean = false>(options?: Options<RefreshTokenData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<RefreshTokenResponses, RefreshTokenErrors, ThrowOnError>({
        url: '/api/auth/refresh',
        ...options
    });
};

/**
 * 用户登出
 * 用户登出系统
 */
export const logout = <ThrowOnError extends boolean = false>(options?: Options<LogoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<LogoutResponses, LogoutErrors, ThrowOnError>({
        url: '/api/auth/logout',
        ...options
    });
};

/**
 * 获取版本号
 * 可用于测试服务通断
 */
export const getVersionInfo1 = <ThrowOnError extends boolean = false>(options?: Options<GetVersionInfo1Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetVersionInfo1Responses, GetVersionInfo1Errors, ThrowOnError>({
        url: '/api/version',
        ...options
    });
};

/**
 * 根据Robot code获取权限信息
 * 根据Robot code获取权限信息
 */
export const getAgentPermissions = <ThrowOnError extends boolean = false>(options: Options<GetAgentPermissionsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAgentPermissionsResponses, GetAgentPermissionsErrors, ThrowOnError>({
        url: '/api/robot/permissions/{robotCode}',
        ...options
    });
};

/**
 * 根据robotCode获取部门列表
 * 根据robotCode获取部门列表
 */
export const getVersionInfo2 = <ThrowOnError extends boolean = false>(options: Options<GetVersionInfo2Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetVersionInfo2Responses, GetVersionInfo2Errors, ThrowOnError>({
        url: '/api/department/list',
        ...options
    });
};

/**
 * 获取当前登录用户信息
 * 获取用户信息
 */
export const getUserInfo = <ThrowOnError extends boolean = false>(options?: Options<GetUserInfoData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserInfoResponses, GetUserInfoErrors, ThrowOnError>({
        url: '/api/auth/user/info',
        ...options
    });
};

/**
 * 用户登录
 * 管理员用户登陆
 */
export const login = <ThrowOnError extends boolean = false>(options: Options<LoginData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<LoginResponses, LoginErrors, ThrowOnError>({
        url: '/api/auth/login',
        ...options
    });
};

/**
 * 删除Robot权限
 * 根据ID删除指定的Robot权限配置
 */
export const deleteAgentPermission = <ThrowOnError extends boolean = false>(options: Options<DeleteAgentPermissionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAgentPermissionResponses, DeleteAgentPermissionErrors, ThrowOnError>({
        url: '/api/robot/permissions/{id}',
        ...options
    });
};