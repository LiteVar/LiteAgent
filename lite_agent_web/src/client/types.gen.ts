// This file is auto-generated by @hey-api/openapi-ts

export type FunctionVO = {
  toolId?: string;
  toolName?: string;
  functionId?: string;
  functionName?: string;
  functionDesc?: string;
  protocol?: string;
  icon?: string;
  mode?: 0 | 1 | 2;
  requestMethod?: string;
};

export enum mode {
  '_0' = 0,
  '_1' = 1,
  '_2' = 2,
}

export type ResponseData = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<{
    /**
     * id
     */
    id?: string;
    /**
     * 名称
     */
    name?: string;
    /**
     * 创建者id
     */
    userId?: string;
    /**
     * 工作空间id
     */
    workspaceId?: string;
    /**
     * 图标
     */
    icon?: string;
    /**
     * 描述
     */
    description?: string;
    /**
     * 分享标识
     */
    shareFlag?: boolean;
    /**
     * 数据源类型: INPUT, FILE, HTML
     */
    dataSourceType?: string;
    /**
     * 向量库集合名称
     */
    vectorCollectionName?: string;
    /**
     * 关联的大模型id
     */
    llmModelId?: string;
    /**
     * embedding 模型
     */
    embeddingModel?: string;
    /**
     * embedding 模型提供商
     */
    embeddingModelProvider?: string;
    /**
     * 检索 TopK
     */
    retrievalTopK?: number;
    /**
     * 检索分数阈值
     */
    retrievalScoreThreshold?: number;
    /**
     * 分享给外部的apiUrl
     */
    apiUrl?: string;
    /**
     * 分享给外部的apikey
     */
    apiKey?: string;
    /**
     * 创建时间
     */
    createTime?: string;
    /**
     * 更新时间
     */
    updateTime?: string;
  }>;
};

export type RetrieveSegment = {
  /**
   * 片段id
   */
  id?: string;
  /**
   * 知识库id
   */
  datasetId?: string;
  /**
   * 文档id
   */
  documentId?: string;
  /**
   * token数
   */
  tokenCount?: number;
  /**
   * 相似度分数
   */
  score?: number;
};

export type ModelVO = {
  id?: string;
  /**
   * 模型名字
   */
  name: string;
  /**
   * 请求url
   */
  baseUrl: string;
  /**
   * 接口key
   */
  apiKey: string;
  /**
   * 限制最大token
   */
  maxTokens?: number;
  /**
   * 模型类型: text, embedding, image, video...
   */
  type: string;
};

export type LocalAgentInfoDTO = {
  /**
   * agentId
   */
  id: string;
  /**
   * agent名称
   */
  name: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 提示词
   */
  prompt?: string;
  /**
   * 关联的大模型id
   */
  llmModelId?: string;
  /**
   * 关联的工具列表
   */
  toolIds?: Array<string>;
  /**
   * 温度值
   */
  temperature?: number;
  /**
   * 概率抽样的 p 值
   */
  topP?: number;
  /**
   * 最大 token 数
   */
  maxTokens?: number;
  /**
   * 方法列表
   */
  toolFunctionList?: Array<FunctionVO1>;
  /**
   * 子agent(普通,分发,分思) id
   */
  subAgentIds?: Array<string>;
  /**
   * agent类型
   */
  type?: 0 | 1 | 2;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
  /**
   * 知识库id
   */
  datasetIds?: Array<string>;
  /**
   * 创建时间
   */
  createTime: string;
};

/**
 * agent类型
 */
export enum type {
  '_0' = 0,
  '_1' = 1,
  '_2' = 2,
}

export type ResponseDataListSegmentVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<SegmentVO>;
};

export type SegmentVO = {
  id?: string;
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * 知识库id
   */
  datasetId?: string;
  /**
   * 文档id
   */
  documentId?: string;
  /**
   * 向量数据库里的对应segment id
   */
  embeddingId?: string;
  /**
   * 向量库集合名称
   */
  vectorCollectionName?: string;
  /**
   * 片段文本内容
   */
  content?: string;
  /**
   * 片段元数据
   */
  metadata?: string;
  /**
   * 字数
   */
  wordCount?: number;
  /**
   * token数
   */
  tokenCount?: number;
  /**
   * 检索命中次数
   */
  hitCount?: number;
  /**
   * 是否启用
   */
  enableFlag?: boolean;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新时间
   */
  updateTime?: string;
  /**
   * 文档名称
   */
  documentName?: string;
  /**
   * 相似度分数
   */
  score?: number;
};

export type ResponseDataDatasetsVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: DatasetsVO;
};

export type ResponseDataAgentApiKey = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: AgentApiKey;
};

export type AgentApiKey = {
  id?: string;
  agentId?: string;
  apiUrl?: string;
  apiKey?: string;
};

export type ResponseDataPageModelDataset = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelDataset;
};

export type PageModelDataset = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<Dataset>;
};

export type DocumentCreateForm = {
  workspaceId: string;
  /**
   * Document name
   */
  name?: string;
  /**
   * Document source type: INPUT, FILE, HTML
   */
  dataSourceType: string;
  /**
   * input content
   */
  content?: string;
  /**
   * html url
   */
  htmlUrl?: Array<string>;
  /**
   * upload file id
   */
  fileId?: string;
  /**
   * default chunk size
   */
  chunkSize?: number;
  /**
   * default Separator to split the document.
   */
  separator?: string;
  /**
   * Metadata to be attached to the document, JSON string.
   */
  metadata?: string;
};

export type ResponseDataListTextSegment = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<TextSegment>;
};

export type TextSegment = {
  text?: string;
  metadata?: Metadata;
};

export type Metadata = {
  metadata?: MapObject;
};

export type MapObject = {
  key?: key;
};

export type ResponseDataApiInfo = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: ApiInfo;
};

export type ApiInfo = {
  apiKey?: string;
  apiUrl?: string;
};

export type ResponseDataListMessageDTO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<MessageDTO>;
};

export type MessageDTO = {
  taskId?: string;
  message?: Array<OutMessage>;
  sessionId?: string;
};

export type DatasetVO = {
  /**
   * 数据集id
   */
  id?: string;
  /**
   * 数据集名字
   */
  name?: string;
  /**
   * 图标
   */
  icon?: string;
};

export type ResponseDataPageModelDatasetRetrieveHistory = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelDatasetRetrieveHistory;
};

export type PageModelDatasetRetrieveHistory = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<DatasetRetrieveHistory>;
};

export type DatasetRetrieveHistory = {
  id?: string;
  datasetId?: string;
  agentId?: string;
  /**
   * 检索内容
   */
  content?: string;
  /**
   * 召回类型: TEST,AGENT
   */
  retrieveType?: string;
  /**
   * 检索到的片段信息
   */
  retrieveSegmentList?: Array<RetrieveSegment>;
  createTime?: string;
};

export type FunctionVO1 = {
  toolId?: string;
  toolName?: string;
  functionId?: string;
  functionName?: string;
  functionDesc?: string;
  protocol?: string;
  icon?: string;
  mode?: 0 | 1 | 2;
  requestMethod?: string;
};

export type AgentFunction = {
  functionId?: string;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
};

export type StackTraceElement = {
  /**
   * The name of the class loader.
   */
  classLoaderName?: string;
  /**
   * The module name.
   */
  moduleName?: string;
  /**
   * The module version.
   */
  moduleVersion?: string;
  /**
   * The declaring class.
   */
  declaringClass?: string;
  /**
   * The method name.
   */
  methodName?: string;
  /**
   * The source file name.
   */
  fileName?: string;
  /**
   * The source line number.
   */
  lineNumber?: number;
  /**
   * Control to show full or partial module, package, and class names.
   */
  format?: number;
};

export type ResponseDataListDocumentSegment = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<DocumentSegment>;
};

export type ResponseDataListDataset = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<Dataset>;
};

export type SegmentUpdateForm = {
  content: string;
  metadata?: string;
};

export type ResponseDataDocumentSegment = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  data?: DocumentSegment;
};

export type ResponseDataPageModelDocumentSegment = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelDocumentSegment;
};

export type PageModelDocumentSegment = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<DocumentSegment>;
};

export type DocumentSegment = {
  id?: string;
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * 知识库id
   */
  datasetId?: string;
  /**
   * 文档id
   */
  documentId?: string;
  /**
   * 向量数据库里的对应segment id
   */
  embeddingId?: string;
  /**
   * 向量库集合名称
   */
  vectorCollectionName?: string;
  content?: string;
  metadata?: string;
  wordCount?: number;
  tokenCount?: number;
  hitCount?: number;
  enableFlag?: boolean;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新时间
   */
  updateTime?: string;
};

export type ResponseDataPageModelDatasetDocument = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelDatasetDocument;
};

export type PageModelDatasetDocument = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<DatasetDocument>;
};

export type DocumentSplittingForm = {
  chunkSize?: number;
  separator?: string;
  /**
   * Metadata to be attached to the document, JSON string.
   */
  metadata?: string;
  /**
   * Flag to indicate it is preview or confirm splitting process.
   */
  previewFlag?: boolean;
};

export type ResponseDataListString = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<string>;
};

export type ResponseDataDatasetDocument = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  data?: DatasetDocument;
};

export type DatasetDocument = {
  id?: string;
  /**
   * 名称
   */
  name?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  datasetId?: string;
  /**
   * 文档类型: INPUT, FILE, HTML
   */
  dataSourceType?: string;
  /**
   * 文件路径
   */
  filePath?: string;
  /**
   * input content
   */
  content?: string;
  /**
   * HTML URL
   */
  htmlUrl?: Array<string>;
  /**
   * MD5 hash of the document
   */
  md5Hash?: string;
  /**
   * document word count
   */
  wordCount?: number;
  /**
   * document token count
   */
  tokenCount?: number;
  /**
   * default chunk size
   */
  chunkSize?: number;
  /**
   * default Separator to split the document.
   */
  separator?: string;
  /**
   * Document metadata (JSON)
   */
  metadata?: string;
  /**
   * 分享开关
   */
  enableFlag?: boolean;
  /**
   * 文档向量化状态: PENDING, SUCCESS, FAILED
   */
  embedStatus?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新时间
   */
  updateTime?: string;
};

export type ResponseDataPageModelDatasetsVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelDatasetsVO;
};

export type PageModelDatasetsVO = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<DatasetsVO>;
};

export type DatasetsVO = {
  id?: string;
  name?: string;
  userId?: string;
  workspaceId?: string;
  icon?: string;
  description?: string;
  shareFlag?: boolean;
  embeddingModel?: string;
  embeddingModelProvider?: string;
  retrievalTopK?: number;
  retrievalScoreThreshold?: number;
  apiUrl?: string;
  apiKey?: string;
  createTime?: string;
  updateTime?: string;
  /**
   * Number of documents in the dataset
   */
  docCount?: number;
  /**
   * Total word count in the dataset
   */
  wordCount?: number;
  /**
   * Number of agents using this dataset
   */
  agentCount?: number;
  canEdit?: boolean;
  canDelete?: boolean;
};

export type DatasetCreateForm = {
  /**
   * Dataset name
   */
  name: string;
  /**
   * Icon URL
   */
  icon?: string;
  /**
   * Description
   */
  description?: string;
  /**
   * LlmModel id
   */
  llmModelId: string;
  /**
   * Embedding model name
   */
  embeddingModel: string;
  /**
   * Embedding model provider
   */
  embeddingModelProvider?: string;
  /**
   * Number of top retrieval results
   */
  retrievalTopK: number;
  /**
   * Score threshold for retrieval results
   */
  retrievalScoreThreshold: number;
};

export type ResponseDataDataset = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 知识库
   */
  data?: Dataset;
};

export type Dataset = {
  /**
   * id
   */
  id?: string;
  /**
   * 名称
   */
  name?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 分享标识
   */
  shareFlag?: boolean;
  /**
   * 数据源类型: INPUT, FILE, HTML
   */
  dataSourceType?: string;
  /**
   * 向量库集合名称
   */
  vectorCollectionName?: string;
  /**
   * 关联的大模型id
   */
  llmModelId?: string;
  /**
   * embedding 模型
   */
  embeddingModel?: string;
  /**
   * embedding 模型提供商
   */
  embeddingModelProvider?: string;
  /**
   * 检索 TopK
   */
  retrievalTopK?: number;
  /**
   * 检索分数阈值
   */
  retrievalScoreThreshold?: number;
  /**
   * 分享给外部的apiUrl
   */
  apiUrl?: string;
  /**
   * 分享给外部的apikey
   */
  apiKey?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新时间
   */
  updateTime?: string;
};

export type Worker = {
  /**
   * 工号
   */
  workNo: string;
  /**
   * 名字
   */
  username?: string;
  /**
   * 职位
   */
  job: string;
};

export type ResponseDataListDict = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<Dict>;
};

export type ResponseDataPageModelModelDTO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelModelDTO;
};

export type PageModelModelDTO = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<ModelDTO>;
};

export type ModelDTO = {
  id?: string;
  /**
   * 模型名称
   */
  name?: string;
  /**
   * 模型访问url
   */
  baseUrl?: string;
  /**
   * 模型访问key
   */
  apiKey?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 创建人名称
   */
  createUser?: string;
  /**
   * 限制最大token
   */
  maxTokens?: number;
  /**
   * 模型类型: text, embedding, image, video...
   */
  type?: string;
  /**
   * 是否能编辑
   */
  canEdit?: boolean;
  /**
   * 是否能删除
   */
  canDelete?: boolean;
  /**
   * 是否能读
   */
  canRead?: boolean;
};

export type ResponseDataAgentDetailVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: AgentDetailVO;
};

export type AgentDetailVO = {
  agent?: Agent;
  model?: LlmModel;
  /**
   * 方法列表
   */
  functionList?: Array<FunctionVO>;
  /**
   * api key
   */
  apiKeyList?: Array<AgentApiKey>;
  /**
   * 数据集列表
   */
  datasetList?: Array<DatasetVO>;
  /**
   * 是否能编辑
   */
  canEdit?: boolean;
  /**
   * 是否能删除
   */
  canDelete?: boolean;
  /**
   * 是否能发布
   */
  canRelease?: boolean;
};

export type ResponseDataListAgentDTO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<AgentDTO>;
};

export type AgentDTO = {
  id?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 创建人名称
   */
  createUser?: string;
  /**
   * agent名称
   */
  name?: string;
  /**
   * 图标url
   */
  icon?: string;
  /**
   * 描述,可空
   */
  description?: string;
  /**
   * 是否已发布
   */
  status?: number;
  /**
   * agent类型
   */
  type?: 0 | 1 | 2;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
  /**
   * 知识库id
   */
  datasetIds?: Array<string>;
};

export type AgentSendMsgDTO = {
  /**
   * text,imageUrl
   */
  type: string;
  /**
   * type=imageUrl时,格式为: data:image/jpeg;base64,{图片的base64编码}
   */
  message: string;
};

export type ResponseDataListTaskMessage = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<TaskMessage>;
};

export type TaskMessage = {
  taskId?: string;
  message?: Array<OutMessage>;
};

export type TokenUsage = {
  promptTokens?: number;
  completionTokens?: number;
  totalTokens?: number;
};

export type OutMessage = {
  /**
   * 消息属于哪个agent的
   */
  agentId?: string;
  taskId?: string;
  dispatchId?: string;
  role?: string;
  /**
   * 消息类型:text,imageUrl,functionCallList,toolReturn,flag
   */
  type?: string;
  [key: string]:
    | {
        [key: string]: unknown;
      }
    | undefined;
  createTime?: string;
  toolCalls?: Array<FunctionCall>;
  toolCallId?: string;
  /**
   * 大模型响应的消息id
   */
  id?: string;
  tokenUsage?: TokenUsage;
};

export type FunctionCall = {
  id?: string;
  name?: string;
  arguments?: Array<string>;
};

export type ResponseDataListAgentSessionVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<AgentSessionVO>;
};

export type AgentSessionVO = {
  agentId?: string;
  /**
   * agent名字
   */
  name?: string;
  createTime?: string;
  /**
   * true为本地,false为云端
   */
  localFlag?: boolean;
};

export type ResponseDataIterableAgent = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<Agent>;
};

export type ResponseDataAccount = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Account;
};

export type Account = {
  id?: string;
  /**
   * 昵称
   */
  name?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 账号状态
   */
  status?: number;
  createTime?: string;
  updateTime?: string;
  /**
   * 逻辑删除
   */
  deleted?: string;
};

export type AgentDebugDTO = {
  /**
   * agent id
   */
  agentId: string;
  /**
   * 模型id
   */
  modelId: string;
  /**
   * 提示词
   */
  prompt?: string;
  /**
   * 工具id
   */
  toolIds?: Array<string>;
  /**
   * 温度值
   */
  temperature?: number;
  /**
   * 概率抽样的 p 值
   */
  topP?: number;
  /**
   * 最大 token 数
   */
  maxTokens?: number;
  /**
   * 子agent(普通,分发,分思) id
   */
  subAgentIds?: Array<string>;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
  /**
   * agent类型
   */
  type?: 0 | 1 | 2;
  /**
   * 方法列表
   */
  functionList?: Array<AgentFunction>;
  /**
   * 数据集id
   */
  datasetIds?: Array<string>;
  /**
   * 方法执行顺序(functionId)
   */
  sequence?: Array<string>;
};

export type ResponseDataAgentVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: AgentVO;
};

export type AgentVO = {
  agent?: Agent;
  model?: LlmModel;
  toolList?: Array<ToolProvider>;
};

export type SseEmitter = {
  timeout?: number | null;
  handler?: Handler | null;
  /**
   * Store send data before handler is initialized.
   */
  earlySendAttempts?: Array<DataWithMediaType>;
  /**
   * Store successful completion before the handler is initialized.
   */
  complete?: boolean;
  /**
   * Store an error before the handler is initialized.
   */
  failure?: Throwable | null;
  timeoutCallback?: DefaultCallback;
  errorCallback?: ErrorCallback;
  completionCallback?: DefaultCallback;
};

export type ErrorCallback = {
  [key: string]: unknown;
};

export type DefaultCallback = {
  delegate?: Runnable | null;
};

export type Runnable = {
  [key: string]: unknown;
};

export type StackTraceElement__ = {
  /**
   * The name of the class loader.
   */
  classLoaderName?: string;
  /**
   * The module name.
   */
  moduleName?: string;
  /**
   * The module version.
   */
  moduleVersion?: string;
  /**
   * The declaring class.
   */
  declaringClass?: string;
  /**
   * The method name.
   */
  methodName?: string;
  /**
   * The source file name.
   */
  fileName?: string;
  /**
   * The source line number.
   */
  lineNumber?: number;
  /**
   * Control to show full or partial module, package, and class names.
   */
  format?: number;
};

export type Throwable = {
  /**
   * Specific details about the Throwable.  For example, for
   * {@code FileNotFoundException}, this contains the name of
   * the file that could not be found.
   */
  detailMessage?: string;
  cause?: Throwable;
  /**
   * The stack trace, as returned by{@link #getStackTrace()}.
   *
   * The field is initialized to a zero-length array.  A{@code
   * * null} value of this field indicates subsequent calls to{@link
   * * #setStackTrace(StackTraceElement[])} and{@link
   * * #fillInStackTrace()} will be no-ops.
   */
  stackTrace?: Array<StackTraceElement>;
  /**
   * The list of suppressed exceptions, as returned by{@link
   * * #getSuppressed()}.  The list is initialized to a zero-element
   * unmodifiable sentinel list.  When a serialized Throwable is
   * read in, if the{@code suppressedExceptions} field points to a
   * zero-element list, the field is reset to the sentinel value.
   */
  suppressedExceptions?: Array<Throwable>;
};

export type DataWithMediaType = {
  [key: string]:
    | {
        [key: string]: unknown;
      }
    | undefined;
  mediaType?: MediaType | null;
};

export type MediaType = {
  type?: string;
  subtype?: string;
  parameters?: MapString;
  toStringValue?: string | null;
};

export type MapString = {
  key?: string;
};

export type Object = {
  [key: string]: unknown;
};

export type Handler = {
  [key: string]: unknown;
};

export type AgentUpdateForm = {
  /**
   * agent名称
   */
  name: string;
  /**
   * 图标url
   */
  icon?: string;
  /**
   * 描述,可空
   */
  description?: string;
  /**
   * 提示词
   */
  prompt?: string;
  /**
   * 关联的大模型id
   */
  llmModelId?: string;
  /**
   * 工具
   */
  toolIds?: Array<string>;
  /**
   * 温度值
   */
  temperature?: number;
  /**
   * 概率抽样的 p 值
   */
  topP?: number;
  /**
   * 最大 token 数
   */
  maxTokens?: number;
  /**
   * agent类型
   */
  type?: 0 | 1 | 2;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
  /**
   * 子agent(普通,分发,分思) id
   */
  subAgentIds?: Array<string>;
  /**
   * 方法列表
   */
  functionList?: Array<AgentFunction>;
  /**
   * 方法执行顺序(functionId)
   */
  sequence?: Array<string>;
  /**
   * 数据集id
   */
  datasetIds?: Array<string>;
};

export type AgentCreateForm = {
  /**
   * agent名称
   */
  name: string;
  /**
   * 图标url
   */
  icon?: string;
  /**
   * 描述,可空
   */
  description?: string;
};

export type ResponseDataAgent = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  data?: Agent;
};

export type Agent = {
  id?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * agent名称
   */
  name?: string;
  /**
   * 图标url
   */
  icon?: string;
  /**
   * 描述,可空
   */
  description?: string;
  /**
   * 提示词
   */
  prompt?: string;
  /**
   * 关联的大模型id
   */
  llmModelId?: string;
  /**
   * 关联的工具列表
   */
  toolIds?: Array<string>;
  /**
   * 方法列表
   */
  functionList?: Array<AgentFunction>;
  /**
   * 方法执行顺序(functionId)
   */
  sequence?: Array<string>;
  /**
   * agent状态: 0-初始待发布,1-已发布生效
   */
  status?: number;
  /**
   * 温度值
   */
  temperature?: number;
  /**
   * 概率抽样的 p 值
   */
  topP?: number;
  /**
   * 最大 token 数
   */
  maxTokens?: number;
  /**
   * 子agent(普通,分发,分思) id
   */
  subAgentIds?: Array<string>;
  /**
   * agent类型
   */
  type?: 0 | 1 | 2;
  /**
   * 执行模式
   */
  mode?: 0 | 1 | 2;
  createTime?: string;
  updateTime?: string;
  /**
   * 逻辑删除
   */
  deleted?: string;
};

export type ToolVOUpdateAction = {
  /**
   * 工具id
   */
  id: string;
  /**
   * 工具名称
   */
  name: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * schema类型
   */
  schemaType?: 1 | 2 | 3 | 4 | 5;
  /**
   * schema文稿
   */
  schemaStr?: string;
  /**
   * open tool schema
   */
  openSchemaStr?: string;
  /**
   * api key类型:Bearer、Basic
   */
  apiKeyType?: string;
  /**
   * api key 值
   */
  apiKey?: string;
};

/**
 * schema类型
 */
export enum schemaType {
  '_1' = 1,
  '_2' = 2,
  '_3' = 3,
  '_4' = 4,
  '_5' = 5,
}

export type ToolVOAddAction = {
  /**
   * 工具id
   */
  id?: string;
  /**
   * 工具名称
   */
  name: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * schema类型
   */
  schemaType?: 1 | 2 | 3 | 4 | 5;
  /**
   * schema文稿
   */
  schemaStr?: string;
  /**
   * open tool schema
   */
  openSchemaStr?: string;
  /**
   * api key类型:Bearer、Basic
   */
  apiKeyType?: string;
  /**
   * api key 值
   */
  apiKey?: string;
};

export type ToolVO = {
  /**
   * 工具id
   */
  id?: string;
  /**
   * 工具名称
   */
  name: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 图标
   */
  icon?: string;
  /**
   * schema类型
   */
  schemaType?: 1 | 2 | 3 | 4 | 5;
  /**
   * schema文稿
   */
  schemaStr?: string;
  /**
   * open tool schema
   */
  openSchemaStr?: string;
  /**
   * api key类型:Bearer、Basic
   */
  apiKeyType?: string;
  /**
   * api key 值
   */
  apiKey?: string;
};

export type ResponseDataToolProvider = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * OpenApi provider entity
   */
  data?: ToolProvider;
};

export type ToolProvider = {
  id?: string;
  /**
   * 创建人
   */
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * 工具名称
   */
  name?: string;
  icon?: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * schema类型:
   * 1-openapi
   * 2-jsonrpc
   * 3-open_modbus
   */
  schemaType?: number;
  /**
   * 原始schema描述字符串, yml、json
   */
  schemaStr?: string;
  /**
   * open tool schema
   */
  openSchemaStr?: string;
  /**
   * 调用工具的apiKey
   */
  apiKey?: string;
  /**
   * apiKey类型: Bearer、Basic
   */
  apiKeyType?: string;
  /**
   * mcp base url
   */
  baseUrl?: string;
  /**
   * mcp sse endpoint
   */
  sseEndpoint?: string;
  createTime?: string;
  updateTime?: string;
  /**
   * 逻辑删除
   */
  deleted?: string;
};

export type ResponseDataListToolDTO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<ToolDTO>;
};

export type ToolDTO = {
  /**
   * 工具id
   */
  id?: string;
  /**
   * 工具名称
   */
  name?: string;
  icon?: string;
  /**
   * 描述
   */
  description?: string;
  /**
   * 创建人名称
   */
  createUser?: string;
  /**
   * 是否能编辑
   */
  canEdit?: boolean;
  /**
   * 是否能删除
   */
  canDelete?: boolean;
  /**
   * 方法
   */
  functionList?: Array<FunctionVO1>;
};

export type ResponseData_PageModel_LlmModel__ = {
  /**
   * 状态码
   */
  code?: number | null;
  /**
   * 响应信息
   */
  message?: string | null;
  /**
   * 响应数据对象
   */
  data?: PageModel_LlmModel_;
};

export type PageModel_LlmModel_ = {
  /**
   * 当前第几页
   */
  pageNo?: number | null;
  /**
   * 一页多少条记录
   */
  pageSize?: number | null;
  /**
   * 全部数据量
   */
  total?: number | null;
  /**
   * 数据
   */
  list?: Array<LlmModel> | null;
};

export type ModelVOUpdateAction = {
  id: string;
  /**
   * 模型名字
   */
  name: string;
  /**
   * 请求url
   */
  baseUrl: string;
  /**
   * 接口key
   */
  apiKey: string;
  /**
   * 限制最大token
   */
  maxTokens?: number;
  /**
   * 模型类型: text, embedding, image, video...
   */
  type: string;
};

export type ResponseData_String_UpdateAction = {
  /**
   * 状态码
   */
  code?: number | null;
  /**
   * 响应信息
   */
  message?: string | null;
  /**
   * 响应数据对象
   */
  data?: string | null;
};

export type ModelVOAddAction = {
  id?: string;
  /**
   * 模型名字
   */
  name: string;
  /**
   * 请求url
   */
  baseUrl: string;
  /**
   * 接口key
   */
  apiKey: string;
  /**
   * 限制最大token
   */
  maxTokens?: number;
  /**
   * 模型类型: text, embedding, image, video...
   */
  type: string;
};

export type ResponseData_String_AddAction = {
  /**
   * 状态码
   */
  code?: number | null;
  /**
   * 响应信息
   */
  message?: string | null;
  /**
   * 响应数据对象
   */
  data?: string | null;
};

export type ResponseData_LlmModel_ = {
  /**
   * 状态码
   */
  code?: number | null;
  /**
   * 响应信息
   */
  message?: string | null;
  data?: LlmModel;
};

export type LlmModel = {
  id?: string;
  /**
   * 模型名称
   */
  name?: string;
  /**
   * 模型访问url
   */
  baseUrl?: string;
  /**
   * 模型访问key
   */
  apiKey?: string;
  /**
   * 创建者id
   */
  userId?: string;
  /**
   * 工作空间id
   */
  workspaceId?: string;
  /**
   * 模型类型: text, embedding, image, video...
   */
  type?: string;
  /**
   * 限制最大token
   */
  maxTokens?: number;
  createTime?: string;
  updateTime?: string;
  /**
   * 逻辑删除
   */
  deleted?: string;
};

export type ResponseDataInteger = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: number;
};

export type ResponseDataPageModelWorkspaceMemberVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: PageModelWorkspaceMemberVO;
};

export type PageModelWorkspaceMemberVO = {
  /**
   * 当前第几页
   */
  pageNo?: number;
  /**
   * 一页多少条记录
   */
  pageSize?: number;
  /**
   * 全部数据量
   */
  total?: number;
  /**
   * 数据
   */
  list?: Array<WorkspaceMemberVO>;
};

export type WorkspaceMemberVO = {
  /**
   * 成员id
   */
  id?: string;
  /**
   * 空间id
   */
  workspaceId?: string;
  /**
   * 成员用户id
   */
  userId?: string;
  /**
   * 昵称
   */
  name?: string;
  /**
   * 成员账号
   */
  email?: string;
  /**
   * 空间成员角色
   */
  role?: number;
  /**
   * 加入时间
   */
  createTime?: string;
};

export type ResponseData_Page_WorkspaceMember__ = {
  /**
   * 状态码
   */
  code?: number | null;
  /**
   * 响应信息
   */
  message?: string | null;
  /**
   * 响应数据对象
   */
  data?: Page_WorkspaceMember_;
};

export type Page_WorkspaceMember_ = {
  content?: Array<WorkspaceMember> | null;
  pageable?: Pageable;
  total?: number | null;
  /**
   * Returns whether the current{@link Streamable} is empty.
   */
  empty?: boolean | null;
  number?: number | null;
  size?: number | null;
  numberOfElements?: number | null;
  sort?: Array<Sort> | null;
  first?: boolean | null;
  last?: boolean | null;
  totalPages?: number | null;
  totalElements?: number | null;
};

export type Pageable = {
  /**
   * Returns whether the current{@link Pageable} contains pagination information.
   */
  paged?: boolean | null;
  /**
   * Returns whether the current{@link Pageable} does not contain pagination information.
   */
  unpaged?: boolean | null;
  /**
   * Returns the page to be returned.
   */
  pageNumber?: number | null;
  /**
   * Returns the number of items to be returned.
   */
  pageSize?: number | null;
  /**
   * Returns the offset to be taken according to the underlying page and page size.
   */
  offset?: number | null;
  /**
   * Returns the sorting parameters.
   */
  sort?: Array<Sort> | null;
};

export type Sort = {
  direction?: 'ASC' | 'DESC' | null;
  property?: string | null;
  ignoreCase?: boolean | null;
  nullHandling?: 'NATIVE' | 'NULLS_FIRST' | 'NULLS_LAST' | null;
  /**
   * Returns whether sorting for this property shall be ascending.
   */
  ascending?: boolean | null;
  /**
   * Returns whether sorting for this property shall be descending.
   */
  descending?: boolean | null;
};

export enum direction {
  ASC = 'ASC',
  DESC = 'DESC',
}

export enum nullHandling {
  NATIVE = 'NATIVE',
  NULLS_FIRST = 'NULLS_FIRST',
  NULLS_LAST = 'NULLS_LAST',
}

export type WorkspaceMember = {
  id?: string | null;
  /**
   * 空间id
   */
  workspaceId?: string | null;
  /**
   * 成员用户id
   */
  userId?: string | null;
  /**
   * 成员账号
   */
  email?: string | null;
  /**
   * 空间成员角色
   */
  role?: number | null;
  /**
   * 加入时间
   */
  createTime?: string | null;
};

export type ResponseDataDict = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * cn.hutool.core.lang.Dict
   */
  data?: Dict;
};

export type Dict = {
  key?: key;
};

export type key = {
  [key: string]: unknown;
};

export type ResponseDataListWorkSpaceVO = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: Array<WorkSpaceVO>;
};

export type WorkSpaceVO = {
  /**
   * 工作空间id
   */
  id?: string;
  /**
   * 工作空间名字
   */
  name?: string;
  /**
   * 当前账号在里面的角色
   */
  role?: '0' | '1' | '2' | '3' | 'ROLE_USER' | 'ROLE_ADMIN_DEL' | 'ROLE_DEVELOPER' | 'ROLE_ADMIN';
};

/**
 * 当前账号在里面的角色
 */
export enum role {
  _0 = '0',
  _1 = '1',
  _2 = '2',
  _3 = '3',
  ROLE_USER = 'ROLE_USER',
  ROLE_ADMIN_DEL = 'ROLE_ADMIN_DEL',
  ROLE_DEVELOPER = 'ROLE_DEVELOPER',
  ROLE_ADMIN = 'ROLE_ADMIN',
}

export type ResponseDataString = {
  /**
   * 状态码
   */
  code?: number;
  /**
   * 响应信息
   */
  message?: string;
  /**
   * 响应数据对象
   */
  data?: string;
};

export type PostV1AuthLoginData = {
  query: {
    /**
     * 邮箱
     */
    email: string;
    /**
     * 密码
     */
    password: string;
  };
};

export type PostV1AuthLoginResponse = ResponseDataString;

export type PostV1AuthLoginError = unknown;

export type PostV1AuthLoginOfInitData = {
  query: {
    /**
     * 邮箱
     */
    email: string;
    /**
     * 密码
     */
    password: string;
    /**
     * 名字
     */
    username: string;
  };
};

export type PostV1AuthLoginOfInitResponse = ResponseDataString;

export type PostV1AuthLoginOfInitError = unknown;

export type GetV1AuthInitStatusResponse = ResponseDataInteger;

export type GetV1AuthInitStatusError = unknown;

export type GetV1ToolListData = {
  headers: {
    'Workspace-id': string;
  };
  query: {
    /**
     * 工具名称
     */
    name?: string;
    /**
     * 0-全部,1-系统,2-来自分享,3-我的
     */
    tab: number;
  };
};

export type GetV1ToolListResponse = ResponseDataListToolDTO;

export type GetV1ToolListError = unknown;

export type GetV1ToolDetailByIdData = {
  path: {
    /**
     * 工具id
     */
    id: string;
  };
};

export type GetV1ToolDetailByIdResponse = ResponseDataToolProvider;

export type GetV1ToolDetailByIdError = unknown;

export type PostV1ToolAddData = {
  body?: ToolVOAddAction;
  headers: {
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PostV1ToolAddResponse = ResponseDataString;

export type PostV1ToolAddError = unknown;

export type PutV1ToolUpdateData = {
  body?: ToolVOUpdateAction;
};

export type PutV1ToolUpdateResponse = ResponseDataString;

export type PutV1ToolUpdateError = unknown;

export type DeleteV1ToolByIdData = {
  path: {
    /**
     * 工具id
     */
    id: string;
  };
};

export type DeleteV1ToolByIdResponse = ResponseDataString;

export type DeleteV1ToolByIdError = unknown;

export type PostV1ModelAddData = {
  body?: ModelVOAddAction;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PostV1ModelAddResponse = ResponseDataString;

export type PostV1ModelAddError = unknown;

export type DeleteV1ModelByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * 模型id
     */
    id: string;
  };
};

export type DeleteV1ModelByIdResponse = ResponseData;

export type DeleteV1ModelByIdError = unknown;

export type PutV1ModelUpdateData = {
  body?: ModelVOUpdateAction;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PutV1ModelUpdateResponse = ResponseDataString;

export type PutV1ModelUpdateError = unknown;

export type GetV1ModelListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    'Workspace-id': string;
  };
  query: {
    pageNo: number;
    pageSize: number;
    type?: string;
  };
};

export type GetV1ModelListResponse = ResponseDataPageModelModelDTO;

export type GetV1ModelListError = unknown;

export type PostV1WorkspaceAddData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    /**
     * 工作空间名字
     */
    name: string;
  };
};

export type PostV1WorkspaceAddResponse = ResponseDataString;

export type PostV1WorkspaceAddError = unknown;

export type GetV1WorkspaceListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query?: {
    /**
     * 只查管理的工作空间,传1
     */
    adminFlag?: number;
  };
};

export type GetV1WorkspaceListResponse = ResponseDataListWorkSpaceVO;

export type GetV1WorkspaceListError = unknown;

export type GetV1WorkspaceMemberListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间
     */
    'Workspace-id': string;
  };
  query: {
    pageNo: number;
    pageSize: number;
    /**
     * 用户名
     */
    username?: string;
  };
};

export type GetV1WorkspaceMemberListResponse = ResponseDataPageModelWorkspaceMemberVO;

export type GetV1WorkspaceMemberListError = unknown;

export type PostV1WorkspaceMemberData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  query: {
    /**
     * 邮箱
     */
    emails: string;
    /**
     * 设定角色(0-普通成员,1-管理员,2-开发者)
     */
    role: number;
  };
};

export type PostV1WorkspaceMemberResponse = ResponseDataString;

export type PostV1WorkspaceMemberError = unknown;

export type DeleteV1WorkspaceMemberByMemberIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * 成员id
     */
    memberId: string;
  };
};

export type DeleteV1WorkspaceMemberByMemberIdResponse = ResponseDataString;

export type DeleteV1WorkspaceMemberByMemberIdError = unknown;

export type PutV1WorkspaceMemberByMemberIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * 成员id
     */
    memberId: string;
  };
  query: {
    /**
     * 角色
     */
    role: number;
  };
};

export type PutV1WorkspaceMemberByMemberIdResponse = ResponseDataString;

export type PutV1WorkspaceMemberByMemberIdError = unknown;

export type GetV1WorkspaceActivateInfoData = {
  query: {
    /**
     * 激活链接中获取参数
     */
    token: string;
  };
};

export type GetV1WorkspaceActivateInfoResponse = ResponseDataDict;

export type GetV1WorkspaceActivateInfoError = unknown;

export type PostV1WorkspaceActivateMemberData = {
  query: {
    /**
     * 密码
     */
    password: string;
    /**
     * 激活链接中获取参数
     */
    token: string;
    /**
     * 昵称
     */
    username: string;
  };
};

export type PostV1WorkspaceActivateMemberResponse = ResponseDataString;

export type PostV1WorkspaceActivateMemberError = unknown;

export type GetV1AgentByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * agent id
     */
    id: string;
  };
};

export type GetV1AgentByIdResponse = ResponseDataAgentDetailVO;

export type GetV1AgentByIdError = unknown;

export type DeleteV1AgentByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * agent id
     */
    id: string;
  };
};

export type DeleteV1AgentByIdResponse = ResponseDataString;

export type DeleteV1AgentByIdError = unknown;

export type PutV1AgentByIdData = {
  body?: AgentUpdateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * agentId
     */
    id: string;
  };
};

export type PutV1AgentByIdResponse = ResponseDataAgent;

export type PutV1AgentByIdError = unknown;

export type PostV1AgentAddData = {
  body?: AgentCreateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PostV1AgentAddResponse = ResponseDataAgent;

export type PostV1AgentAddError = unknown;

export type PostV1AgentEnableShareByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * agent id
     */
    id: string;
  };
};

export type PostV1AgentEnableShareByIdResponse = ResponseDataString;

export type PostV1AgentEnableShareByIdError = unknown;

export type GetV1ChatStreamData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    sessionId: string;
  };
};

export type GetV1ChatStreamResponse = SseEmitter;

export type GetV1ChatStreamError = unknown;

export type PostV1ChatInitSessionByAgentIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    agentId: string;
  };
};

export type PostV1ChatInitSessionByAgentIdResponse = ResponseDataString;

export type PostV1ChatInitSessionByAgentIdError = unknown;

export type GetV1UserInfoData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
};

export type GetV1UserInfoResponse = ResponseDataAccount;

export type GetV1UserInfoError = unknown;

export type PutV1UserUpdateData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    /**
     * 头像url
     */
    avatar?: string;
    /**
     * 昵称
     */
    name: string;
  };
};

export type PutV1UserUpdateResponse = ResponseDataString;

export type PutV1UserUpdateError = unknown;

export type PutV1UserUpdatePwdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    /**
     * 新密码
     */
    newPwd: string;
    /**
     * 旧密码
     */
    originPwd: string;
  };
};

export type PutV1UserUpdatePwdResponse = ResponseDataString;

export type PutV1UserUpdatePwdError = unknown;

export type GetV1AgentListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    'Workspace-id': string;
  };
  query: {
    /**
     * agent名称
     */
    name?: string;
    /**
     * 0-全部,1-系统,2-来自分享,3-我的,4-本地agent
     */
    tab: number;
  };
};

export type GetV1AgentListResponse = ResponseDataListAgentDTO;

export type GetV1AgentListError = unknown;

export type PostV1ChatInitSessionData = {
  body?: AgentDebugDTO;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
};

export type PostV1ChatInitSessionResponse = ResponseDataString;

export type PostV1ChatInitSessionError = unknown;

export type GetV1ChatRecentAgentData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    'Workspace-id': string;
  };
};

export type GetV1ChatRecentAgentResponse = ResponseDataListAgentSessionVO;

export type GetV1ChatRecentAgentError = unknown;

export type GetV1ChatAgentChatByAgentIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    agentId: string;
  };
  query: {
    /**
     * 0-正常聊天,1-调试
     */
    debugFlag: number;
  };
};

export type GetV1ChatAgentChatByAgentIdResponse = ResponseDataListMessageDTO;

export type GetV1ChatAgentChatByAgentIdError = unknown;

export type PostV1ChatSendBySessionIdData = {
  body?: Array<AgentSendMsgDTO>;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * 会话id
     */
    sessionId: string;
  };
};

export type PostV1ChatSendBySessionIdResponse = ResponseDataString;

export type PostV1ChatSendBySessionIdError = unknown;

export type GetV1AgentAdminListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    'Workspace-id': string;
  };
  query: {
    /**
     * agent名称
     */
    name?: string;
    /**
     * 0-全部,1-系统,2-来自分享,3-我的
     */
    tab: number;
  };
};

export type GetV1AgentAdminListResponse = ResponseDataListAgentDTO;

export type GetV1AgentAdminListError = unknown;

export type GetV1AgentAdminInfoByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    id: string;
  };
};

export type GetV1AgentAdminInfoByIdResponse = ResponseDataAgentDetailVO;

export type GetV1AgentAdminInfoByIdError = unknown;

export type PutV1AgentReleaseByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * agent id
     */
    id: string;
  };
};

export type PutV1AgentReleaseByIdResponse = ResponseDataString;

export type PutV1AgentReleaseByIdError = unknown;

export type PostV1FileUploadData = {
  body?: {
    file: Blob | File;
  };
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
};

export type PostV1FileUploadResponse = ResponseDataString;

export type PostV1FileUploadError = unknown;

export type GetV1FileDownloadData = {
  query: {
    filename: string;
  };
};

export type GetV1FileDownloadResponse = {
  [key: string]: unknown;
};

export type GetV1FileDownloadError = unknown;

export type PostV1ChatStreamBySessionIdData = {
  body?: Array<AgentSendMsgDTO>;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * 会话id
     */
    sessionId: string;
  };
};

export type PostV1ChatStreamBySessionIdResponse = SseEmitter;

export type PostV1ChatStreamBySessionIdError = unknown;

export type PostV1ChatClearSessionData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    sessionId: string;
  };
};

export type PostV1ChatClearSessionResponse = ResponseDataString;

export type PostV1ChatClearSessionError = unknown;

export type PostV1ToolCheckSchemaData = {
  body?: ToolVO;
};

export type PostV1ToolCheckSchemaResponse = ResponseDataString;

export type PostV1ToolCheckSchemaError = unknown;

export type PostV1ChatClearDebugRecordData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    agentId: string;
    debugFlag: number;
  };
};

export type PostV1ChatClearDebugRecordResponse = ResponseDataString;

export type PostV1ChatClearDebugRecordError = unknown;

export type PostV1AuthLogoutData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
};

export type PostV1AuthLogoutResponse = ResponseDataString;

export type PostV1AuthLogoutError = unknown;

export type GetV1ToolListWithFunctionData = {
  headers: {
    'Workspace-id': string;
  };
  query: {
    /**
     * 0-全部,1-系统,2-来自分享,3-我的
     */
    tab: number;
  };
};

export type GetV1ToolListWithFunctionResponse = ResponseDataListToolDTO;

export type GetV1ToolListWithFunctionError = unknown;

export type PostV1DatasetAddData = {
  body?: DatasetCreateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PostV1DatasetAddResponse = ResponseDataDataset;

export type PostV1DatasetAddError = unknown;

export type GetV1DatasetByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * the dataset ID
     */
    id: string;
  };
};

export type GetV1DatasetByIdResponse = ResponseDataDatasetsVO;

export type GetV1DatasetByIdError = unknown;

export type PutV1DatasetByIdData = {
  body?: DatasetCreateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the dataset ID
     */
    id: string;
  };
};

export type PutV1DatasetByIdResponse = ResponseDataDataset;

export type PutV1DatasetByIdError = unknown;

export type DeleteV1DatasetByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the dataset ID
     */
    id: string;
  };
};

export type DeleteV1DatasetByIdResponse = ResponseDataString;

export type DeleteV1DatasetByIdError = unknown;

export type GetV1DatasetListDatasetsByAgentData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  query: {
    /**
     * the agent ID
     */
    agentId: string;
  };
};

export type GetV1DatasetListDatasetsByAgentResponse = ResponseDataListDataset;

export type GetV1DatasetListDatasetsByAgentError = unknown;

export type PutV1DatasetByIdShareData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the dataset ID
     */
    id: string;
  };
};

export type PutV1DatasetByIdShareResponse = ResponseDataString;

export type PutV1DatasetByIdShareError = unknown;

export type GetV1DatasetByIdRetrieveHistoryData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * datasetId
     */
    id: string;
  };
  query: {
    /**
     * pageNo
     */
    pageNo: number;
    /**
     * pageSize
     */
    pageSize: number;
  };
};

export type GetV1DatasetByIdRetrieveHistoryResponse = ResponseDataPageModelDatasetRetrieveHistory;

export type GetV1DatasetByIdRetrieveHistoryError = unknown;

export type PostV1DatasetByDatasetIdDocumentsData = {
  body?: DocumentCreateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the dataset ID
     */
    datasetId: string;
  };
};

export type PostV1DatasetByDatasetIdDocumentsResponse = ResponseDataDatasetDocument;

export type PostV1DatasetByDatasetIdDocumentsError = unknown;

export type GetV1DatasetByDatasetIdDocumentsData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * the dataset ID
     */
    datasetId: string;
  };
  query: {
    /**
     * the page number
     */
    pageNo: number;
    /**
     * the page size
     */
    pageSize: number;
  };
};

export type GetV1DatasetByDatasetIdDocumentsResponse = ResponseDataPageModelDatasetDocument;

export type GetV1DatasetByDatasetIdDocumentsError = unknown;

export type PutV1DatasetDocumentsByDocumentIdRenameData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the document ID
     */
    documentId: string;
  };
  query: {
    /**
     * the new name
     */
    name: string;
  };
};

export type PutV1DatasetDocumentsByDocumentIdRenameResponse = ResponseDataDatasetDocument;

export type PutV1DatasetDocumentsByDocumentIdRenameError = unknown;

export type DeleteV1DatasetDocumentsByDocumentIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the document ID
     */
    documentId: string;
  };
};

export type DeleteV1DatasetDocumentsByDocumentIdResponse = ResponseDataString;

export type DeleteV1DatasetDocumentsByDocumentIdError = unknown;

export type DeleteV1DatasetDocumentsBatchDeleteData = {
  body?: Array<string>;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type DeleteV1DatasetDocumentsBatchDeleteResponse = ResponseDataString;

export type DeleteV1DatasetDocumentsBatchDeleteError = unknown;

export type GetV1DatasetDocumentsByDocumentIdSegmentsData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * the document ID
     */
    documentId: string;
  };
  query: {
    /**
     * the page number
     */
    pageNo: number;
    /**
     * the page size
     */
    pageSize: number;
    query: string;
  };
};

export type GetV1DatasetDocumentsByDocumentIdSegmentsResponse = ResponseDataPageModelDocumentSegment;

export type GetV1DatasetDocumentsByDocumentIdSegmentsError = unknown;

export type PostV1DatasetDocumentsByDocumentIdSegmentsData = {
  body?: SegmentUpdateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the document ID
     */
    documentId: string;
  };
};

export type PostV1DatasetDocumentsByDocumentIdSegmentsResponse = ResponseDataDocumentSegment;

export type PostV1DatasetDocumentsByDocumentIdSegmentsError = unknown;

export type PutV1DatasetDocumentsByDocumentIdEnableData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the document ID
     */
    documentId: string;
  };
};

export type PutV1DatasetDocumentsByDocumentIdEnableResponse = ResponseDataString;

export type PutV1DatasetDocumentsByDocumentIdEnableError = unknown;

export type PutV1DatasetSegmentsBySegmentIdEnableData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the segment ID
     */
    segmentId: string;
  };
};

export type PutV1DatasetSegmentsBySegmentIdEnableResponse = ResponseDataString;

export type PutV1DatasetSegmentsBySegmentIdEnableError = unknown;

export type GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    documentId: string;
  };
  query: {
    inputText: string;
  };
};

export type GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextResponse = ResponseDataListDocumentSegment;

export type GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextError = unknown;

export type PutV1DatasetSegmentsBySegmentIdData = {
  body?: SegmentUpdateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the segment ID
     */
    segmentId: string;
  };
};

export type PutV1DatasetSegmentsBySegmentIdResponse = ResponseDataDocumentSegment;

export type PutV1DatasetSegmentsBySegmentIdError = unknown;

export type DeleteV1DatasetSegmentsBySegmentIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * the segment ID
     */
    segmentId: string;
  };
};

export type DeleteV1DatasetSegmentsBySegmentIdResponse = ResponseDataString;

export type DeleteV1DatasetSegmentsBySegmentIdError = unknown;

export type GetV1DatasetByIdRetrieveData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * 知识库ID
     */
    id: string;
  };
  query: {
    /**
     * 要检索的内容
     */
    query: string;
  };
};

export type GetV1DatasetByIdRetrieveResponse = ResponseDataListSegmentVO;

export type GetV1DatasetByIdRetrieveError = unknown;

export type GetV1DatasetByIdApiKeyGenerateData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * 知识库ID
     */
    id: string;
  };
};

export type GetV1DatasetByIdApiKeyGenerateResponse = ResponseDataDataset;

export type GetV1DatasetByIdApiKeyGenerateError = unknown;

export type PostV1AgentGenerateApiKeyByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    /**
     * agent id
     */
    id: string;
  };
};

export type PostV1AgentGenerateApiKeyByIdResponse = ResponseDataAgentApiKey;

export type PostV1AgentGenerateApiKeyByIdError = unknown;

export type PostV1DatasetDocumentsSplitData = {
  body?: DocumentCreateForm;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type PostV1DatasetDocumentsSplitResponse = ResponseDataListString;

export type PostV1DatasetDocumentsSplitError = unknown;

export type DeleteV1DatasetSegmentsBatchDeleteData = {
  body?: Array<string>;
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
};

export type DeleteV1DatasetSegmentsBatchDeleteResponse = ResponseDataString;

export type DeleteV1DatasetSegmentsBatchDeleteError = unknown;

export type GetV1DatasetListData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间标识符
     */
    'Workspace-id': string;
  };
  query: {
    /**
     * 页码
     */
    pageNo: number;
    /**
     * 每页大小
     */
    pageSize: number;
    /**
     * 查询关键字
     */
    query?: string;
  };
};

export type GetV1DatasetListResponse = ResponseDataPageModelDatasetsVO;

export type GetV1DatasetListError = unknown;

export type PostV1AgentResetSequenceByAgentIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
    /**
     * 工作空间id
     */
    'Workspace-id': string;
  };
  path: {
    agentId: string;
  };
};

export type PostV1AgentResetSequenceByAgentIdResponse = ResponseDataString;

export type PostV1AgentResetSequenceByAgentIdError = unknown;

export type GetV1DatasetByIdRetrieveExternalData = {
  path: {
    id: string;
  };
  query: {
    query: string;
  };
};

export type GetV1DatasetByIdRetrieveExternalResponse = ResponseDataListSegmentVO;

export type GetV1DatasetByIdRetrieveExternalError = unknown;

export type GetV1DatasetRetrieveHistoryByIdData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  path: {
    /**
     * id
     */
    id: string;
  };
};

export type GetV1DatasetRetrieveHistoryByIdResponse = ResponseDataListSegmentVO;

export type GetV1DatasetRetrieveHistoryByIdError = unknown;

export type PostV1UserResetPwdCaptchaData = {
  query: {
    /**
     * 邮箱
     */
    email: string;
  };
};

export type PostV1UserResetPwdCaptchaResponse = ResponseDataString;

export type PostV1UserResetPwdCaptchaError = unknown;

export type PostV1UserResetPwdCaptchaVerifyData = {
  query: {
    captcha: string;
    email: string;
  };
};

export type PostV1UserResetPwdCaptchaVerifyResponse = ResponseDataString;

export type PostV1UserResetPwdCaptchaVerifyError = unknown;

export type GetV1UserResetPwdByUuidData = {
  path: {
    uuid: string;
  };
};

export type GetV1UserResetPwdByUuidResponse = ResponseDataString;

export type GetV1UserResetPwdByUuidError = unknown;

export type PostV1UserResetPwdByUuidData = {
  path: {
    uuid: string;
  };
  query: {
    password: string;
  };
};

export type PostV1UserResetPwdByUuidResponse = ResponseDataString;

export type PostV1UserResetPwdByUuidError = unknown;

export type PostV1ChatAudioTranscriptionsData = {
  body?: {
    audio: Blob | File;
  };
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    modelId: string;
  };
};

export type PostV1ChatAudioTranscriptionsResponse = ResponseDataString;

export type PostV1ChatAudioTranscriptionsError = unknown;

export type PostV1ChatAudioSpeechData = {
  headers: {
    /**
     * 认证 Token
     */
    Authorization: string;
  };
  query: {
    content: string;
    modelId: string;
  };
};

export type PostV1ChatAudioSpeechResponse = {
  [key: string]: unknown;
};

export type PostV1ChatAudioSpeechError = unknown;

export type PostV1UserResetPwdConfirmData = {
  query: {
    email: string;
    password: string;
  };
};

export type PostV1UserResetPwdConfirmResponse = ResponseDataString;

export type PostV1UserResetPwdConfirmError = unknown;

export type $OpenApiTs = {
  '/v1/auth/login': {
    post: {
      req: PostV1AuthLoginData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/auth/loginOfInit': {
    post: {
      req: PostV1AuthLoginOfInitData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/auth/initStatus': {
    get: {
      res: {
        /**
         * 成功
         */
        '200': ResponseDataInteger;
      };
    };
  };
  '/v1/tool/list': {
    get: {
      req: GetV1ToolListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListToolDTO;
      };
    };
  };
  '/v1/tool/detail/{id}': {
    get: {
      req: GetV1ToolDetailByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataToolProvider;
      };
    };
  };
  '/v1/tool/add': {
    post: {
      req: PostV1ToolAddData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/tool/update': {
    put: {
      req: PutV1ToolUpdateData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/tool/{id}': {
    delete: {
      req: DeleteV1ToolByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/model/add': {
    post: {
      req: PostV1ModelAddData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/model/{id}': {
    delete: {
      req: DeleteV1ModelByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseData;
      };
    };
  };
  '/v1/model/update': {
    put: {
      req: PutV1ModelUpdateData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/model/list': {
    get: {
      req: GetV1ModelListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelModelDTO;
      };
    };
  };
  '/v1/workspace/add': {
    post: {
      req: PostV1WorkspaceAddData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/workspace/list': {
    get: {
      req: GetV1WorkspaceListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListWorkSpaceVO;
      };
    };
  };
  '/v1/workspace/memberList': {
    get: {
      req: GetV1WorkspaceMemberListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelWorkspaceMemberVO;
      };
    };
  };
  '/v1/workspace/member': {
    post: {
      req: PostV1WorkspaceMemberData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/workspace/member/{memberId}': {
    delete: {
      req: DeleteV1WorkspaceMemberByMemberIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
    put: {
      req: PutV1WorkspaceMemberByMemberIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/workspace/activateInfo': {
    get: {
      req: GetV1WorkspaceActivateInfoData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDict;
      };
    };
  };
  '/v1/workspace/activateMember': {
    post: {
      req: PostV1WorkspaceActivateMemberData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/agent/{id}': {
    get: {
      req: GetV1AgentByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAgentDetailVO;
      };
    };
    delete: {
      req: DeleteV1AgentByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
    put: {
      req: PutV1AgentByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAgent;
      };
    };
  };
  '/v1/agent/add': {
    post: {
      req: PostV1AgentAddData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAgent;
      };
    };
  };
  '/v1/agent/enableShare/{id}': {
    post: {
      req: PostV1AgentEnableShareByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/chat/stream': {
    get: {
      req: GetV1ChatStreamData;
      res: {
        /**
         * 成功
         */
        '200': SseEmitter;
      };
    };
  };
  '/v1/chat/initSession/{agentId}': {
    post: {
      req: PostV1ChatInitSessionByAgentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/user/info': {
    get: {
      req: GetV1UserInfoData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAccount;
      };
    };
  };
  '/v1/user/update': {
    put: {
      req: PutV1UserUpdateData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/user/updatePwd': {
    put: {
      req: PutV1UserUpdatePwdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/agent/list': {
    get: {
      req: GetV1AgentListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListAgentDTO;
      };
    };
  };
  '/v1/chat/initSession': {
    post: {
      req: PostV1ChatInitSessionData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/chat/recentAgent': {
    get: {
      req: GetV1ChatRecentAgentData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListAgentSessionVO;
      };
    };
  };
  '/v1/chat/agentChat/{agentId}': {
    get: {
      req: GetV1ChatAgentChatByAgentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListMessageDTO;
      };
    };
  };
  '/v1/chat/send/{sessionId}': {
    post: {
      req: PostV1ChatSendBySessionIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/agent/adminList': {
    get: {
      req: GetV1AgentAdminListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListAgentDTO;
      };
    };
  };
  '/v1/agent/adminInfo/{id}': {
    get: {
      req: GetV1AgentAdminInfoByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAgentDetailVO;
      };
    };
  };
  '/v1/agent/release/{id}': {
    put: {
      req: PutV1AgentReleaseByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/file/upload': {
    post: {
      req: PostV1FileUploadData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/file/download': {
    get: {
      req: GetV1FileDownloadData;
      res: {
        /**
         * 成功
         */
        '200': {
          [key: string]: unknown;
        };
      };
    };
  };
  '/v1/chat/stream/{sessionId}': {
    post: {
      req: PostV1ChatStreamBySessionIdData;
      res: {
        /**
         * 成功
         */
        '200': SseEmitter;
      };
    };
  };
  '/v1/chat/clearSession': {
    post: {
      req: PostV1ChatClearSessionData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/tool/checkSchema': {
    post: {
      req: PostV1ToolCheckSchemaData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/chat/clearDebugRecord': {
    post: {
      req: PostV1ChatClearDebugRecordData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/auth/logout': {
    post: {
      req: PostV1AuthLogoutData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/tool/listWithFunction': {
    get: {
      req: GetV1ToolListWithFunctionData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListToolDTO;
      };
    };
  };
  '/v1/dataset/add': {
    post: {
      req: PostV1DatasetAddData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDataset;
      };
    };
  };
  '/v1/dataset/{id}': {
    get: {
      req: GetV1DatasetByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDatasetsVO;
      };
    };
    put: {
      req: PutV1DatasetByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDataset;
      };
    };
    delete: {
      req: DeleteV1DatasetByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/listDatasetsByAgent': {
    get: {
      req: GetV1DatasetListDatasetsByAgentData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListDataset;
      };
    };
  };
  '/v1/dataset/{id}/share': {
    put: {
      req: PutV1DatasetByIdShareData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/{id}/retrieve/history': {
    get: {
      req: GetV1DatasetByIdRetrieveHistoryData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelDatasetRetrieveHistory;
      };
    };
  };
  '/v1/dataset/{datasetId}/documents': {
    post: {
      req: PostV1DatasetByDatasetIdDocumentsData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDatasetDocument;
      };
    };
    get: {
      req: GetV1DatasetByDatasetIdDocumentsData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelDatasetDocument;
      };
    };
  };
  '/v1/dataset/documents/{documentId}/rename': {
    put: {
      req: PutV1DatasetDocumentsByDocumentIdRenameData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDatasetDocument;
      };
    };
  };
  '/v1/dataset/documents/{documentId}': {
    delete: {
      req: DeleteV1DatasetDocumentsByDocumentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/documents/batchDelete': {
    delete: {
      req: DeleteV1DatasetDocumentsBatchDeleteData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/documents/{documentId}/segments': {
    get: {
      req: GetV1DatasetDocumentsByDocumentIdSegmentsData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelDocumentSegment;
      };
    };
    post: {
      req: PostV1DatasetDocumentsByDocumentIdSegmentsData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDocumentSegment;
      };
    };
  };
  '/v1/dataset/documents/{documentId}/enable': {
    put: {
      req: PutV1DatasetDocumentsByDocumentIdEnableData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/segments/{segmentId}/enable': {
    put: {
      req: PutV1DatasetSegmentsBySegmentIdEnableData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/documents/{documentId}/segments/searchByText': {
    get: {
      req: GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListDocumentSegment;
      };
    };
  };
  '/v1/dataset/segments/{segmentId}': {
    put: {
      req: PutV1DatasetSegmentsBySegmentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDocumentSegment;
      };
    };
    delete: {
      req: DeleteV1DatasetSegmentsBySegmentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/{id}/retrieve': {
    get: {
      req: GetV1DatasetByIdRetrieveData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListSegmentVO;
      };
    };
  };
  '/v1/dataset/{id}/apiKey/generate': {
    get: {
      req: GetV1DatasetByIdApiKeyGenerateData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataDataset;
      };
    };
  };
  '/v1/agent/generateApiKey/{id}': {
    post: {
      req: PostV1AgentGenerateApiKeyByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataAgentApiKey;
      };
    };
  };
  '/v1/dataset/documents/split': {
    post: {
      req: PostV1DatasetDocumentsSplitData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListString;
      };
    };
  };
  '/v1/dataset/segments/batchDelete': {
    delete: {
      req: DeleteV1DatasetSegmentsBatchDeleteData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/list': {
    get: {
      req: GetV1DatasetListData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataPageModelDatasetsVO;
      };
    };
  };
  '/v1/agent/resetSequence/{agentId}': {
    post: {
      req: PostV1AgentResetSequenceByAgentIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/dataset/{id}/retrieve/external': {
    get: {
      req: GetV1DatasetByIdRetrieveExternalData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListSegmentVO;
      };
    };
  };
  '/v1/dataset/retrieve/history/{id}': {
    get: {
      req: GetV1DatasetRetrieveHistoryByIdData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataListSegmentVO;
      };
    };
  };
  '/v1/user/resetPwd/captcha': {
    post: {
      req: PostV1UserResetPwdCaptchaData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/user/resetPwd/captcha/verify': {
    post: {
      req: PostV1UserResetPwdCaptchaVerifyData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/user/resetPwd/{uuid}': {
    get: {
      req: GetV1UserResetPwdByUuidData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
    post: {
      req: PostV1UserResetPwdByUuidData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/chat/audio/transcriptions': {
    post: {
      req: PostV1ChatAudioTranscriptionsData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
  '/v1/chat/audio/speech': {
    post: {
      req: PostV1ChatAudioSpeechData;
      res: {
        /**
         * 成功
         */
        '200': {
          [key: string]: unknown;
        };
      };
    };
  };
  '/v1/user/resetPwd/confirm': {
    post: {
      req: PostV1UserResetPwdConfirmData;
      res: {
        /**
         * 成功
         */
        '200': ResponseDataString;
      };
    };
  };
};
