// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type {
  PostV1AuthLoginData,
  PostV1AuthLoginError,
  PostV1AuthLoginResponse,
  PostV1AuthLoginOfInitData,
  PostV1AuthLoginOfInitError,
  PostV1AuthLoginOfInitResponse,
  GetV1AuthInitStatusError,
  GetV1AuthInitStatusResponse,
  GetV1ToolListData,
  GetV1ToolListError,
  GetV1ToolListResponse,
  GetV1ToolDetailByIdData,
  GetV1ToolDetailByIdError,
  GetV1ToolDetailByIdResponse,
  PostV1ToolAddData,
  PostV1ToolAddError,
  PostV1ToolAddResponse,
  PutV1ToolUpdateData,
  PutV1ToolUpdateError,
  PutV1ToolUpdateResponse,
  DeleteV1ToolByIdData,
  DeleteV1ToolByIdError,
  DeleteV1ToolByIdResponse,
  PostV1ModelAddData,
  PostV1ModelAddError,
  PostV1ModelAddResponse,
  DeleteV1ModelByIdData,
  DeleteV1ModelByIdError,
  DeleteV1ModelByIdResponse,
  PutV1ModelUpdateData,
  PutV1ModelUpdateError,
  PutV1ModelUpdateResponse,
  GetV1ModelListData,
  GetV1ModelListError,
  GetV1ModelListResponse,
  PostV1WorkspaceAddData,
  PostV1WorkspaceAddError,
  PostV1WorkspaceAddResponse,
  GetV1WorkspaceListData,
  GetV1WorkspaceListError,
  GetV1WorkspaceListResponse,
  GetV1WorkspaceMemberListData,
  GetV1WorkspaceMemberListError,
  GetV1WorkspaceMemberListResponse,
  PostV1WorkspaceMemberData,
  PostV1WorkspaceMemberError,
  PostV1WorkspaceMemberResponse,
  DeleteV1WorkspaceMemberByMemberIdData,
  DeleteV1WorkspaceMemberByMemberIdError,
  DeleteV1WorkspaceMemberByMemberIdResponse,
  PutV1WorkspaceMemberByMemberIdData,
  PutV1WorkspaceMemberByMemberIdError,
  PutV1WorkspaceMemberByMemberIdResponse,
  GetV1WorkspaceActivateInfoData,
  GetV1WorkspaceActivateInfoError,
  GetV1WorkspaceActivateInfoResponse,
  PostV1WorkspaceActivateMemberData,
  PostV1WorkspaceActivateMemberError,
  PostV1WorkspaceActivateMemberResponse,
  GetV1AgentByIdData,
  GetV1AgentByIdError,
  GetV1AgentByIdResponse,
  DeleteV1AgentByIdData,
  DeleteV1AgentByIdError,
  DeleteV1AgentByIdResponse,
  PutV1AgentByIdData,
  PutV1AgentByIdError,
  PutV1AgentByIdResponse,
  PostV1AgentAddData,
  PostV1AgentAddError,
  PostV1AgentAddResponse,
  PostV1AgentEnableShareByIdData,
  PostV1AgentEnableShareByIdError,
  PostV1AgentEnableShareByIdResponse,
  GetV1ChatStreamData,
  GetV1ChatStreamError,
  GetV1ChatStreamResponse,
  PostV1ChatInitSessionByAgentIdData,
  PostV1ChatInitSessionByAgentIdError,
  PostV1ChatInitSessionByAgentIdResponse,
  GetV1UserInfoData,
  GetV1UserInfoError,
  GetV1UserInfoResponse,
  PutV1UserUpdateData,
  PutV1UserUpdateError,
  PutV1UserUpdateResponse,
  PutV1UserUpdatePwdData,
  PutV1UserUpdatePwdError,
  PutV1UserUpdatePwdResponse,
  GetV1AgentListData,
  GetV1AgentListError,
  GetV1AgentListResponse,
  PostV1ChatInitSessionData,
  PostV1ChatInitSessionError,
  PostV1ChatInitSessionResponse,
  GetV1ChatRecentAgentData,
  GetV1ChatRecentAgentError,
  GetV1ChatRecentAgentResponse,
  GetV1ChatAgentChatByAgentIdData,
  GetV1ChatAgentChatByAgentIdError,
  GetV1ChatAgentChatByAgentIdResponse,
  PostV1ChatSendBySessionIdData,
  PostV1ChatSendBySessionIdError,
  PostV1ChatSendBySessionIdResponse,
  GetV1AgentAdminListData,
  GetV1AgentAdminListError,
  GetV1AgentAdminListResponse,
  GetV1AgentAdminInfoByIdData,
  GetV1AgentAdminInfoByIdError,
  GetV1AgentAdminInfoByIdResponse,
  PutV1AgentReleaseByIdData,
  PutV1AgentReleaseByIdError,
  PutV1AgentReleaseByIdResponse,
  PostV1FileUploadData,
  PostV1FileUploadError,
  PostV1FileUploadResponse,
  GetV1FileDownloadData,
  GetV1FileDownloadError,
  GetV1FileDownloadResponse,
  PostV1ChatStreamBySessionIdData,
  PostV1ChatStreamBySessionIdError,
  PostV1ChatStreamBySessionIdResponse,
  PostV1ChatClearSessionData,
  PostV1ChatClearSessionError,
  PostV1ChatClearSessionResponse,
  PostV1ToolCheckSchemaData,
  PostV1ToolCheckSchemaError,
  PostV1ToolCheckSchemaResponse,
  PostV1ChatClearDebugRecordData,
  PostV1ChatClearDebugRecordError,
  PostV1ChatClearDebugRecordResponse,
  PostV1AuthLogoutData,
  PostV1AuthLogoutError,
  PostV1AuthLogoutResponse,
  GetV1ToolListWithFunctionData,
  GetV1ToolListWithFunctionError,
  GetV1ToolListWithFunctionResponse,
  PostV1DatasetAddData,
  PostV1DatasetAddError,
  PostV1DatasetAddResponse,
  GetV1DatasetByIdData,
  GetV1DatasetByIdError,
  GetV1DatasetByIdResponse,
  PutV1DatasetByIdData,
  PutV1DatasetByIdError,
  PutV1DatasetByIdResponse,
  DeleteV1DatasetByIdData,
  DeleteV1DatasetByIdError,
  DeleteV1DatasetByIdResponse,
  GetV1DatasetListDatasetsByAgentData,
  GetV1DatasetListDatasetsByAgentError,
  GetV1DatasetListDatasetsByAgentResponse,
  PutV1DatasetByIdShareData,
  PutV1DatasetByIdShareError,
  PutV1DatasetByIdShareResponse,
  GetV1DatasetByIdRetrieveHistoryData,
  GetV1DatasetByIdRetrieveHistoryError,
  GetV1DatasetByIdRetrieveHistoryResponse,
  PostV1DatasetByDatasetIdDocumentsData,
  PostV1DatasetByDatasetIdDocumentsError,
  PostV1DatasetByDatasetIdDocumentsResponse,
  GetV1DatasetByDatasetIdDocumentsData,
  GetV1DatasetByDatasetIdDocumentsError,
  GetV1DatasetByDatasetIdDocumentsResponse,
  PutV1DatasetDocumentsByDocumentIdRenameData,
  PutV1DatasetDocumentsByDocumentIdRenameError,
  PutV1DatasetDocumentsByDocumentIdRenameResponse,
  DeleteV1DatasetDocumentsByDocumentIdData,
  DeleteV1DatasetDocumentsByDocumentIdError,
  DeleteV1DatasetDocumentsByDocumentIdResponse,
  DeleteV1DatasetDocumentsBatchDeleteData,
  DeleteV1DatasetDocumentsBatchDeleteError,
  DeleteV1DatasetDocumentsBatchDeleteResponse,
  GetV1DatasetDocumentsByDocumentIdSegmentsData,
  GetV1DatasetDocumentsByDocumentIdSegmentsError,
  GetV1DatasetDocumentsByDocumentIdSegmentsResponse,
  PostV1DatasetDocumentsByDocumentIdSegmentsData,
  PostV1DatasetDocumentsByDocumentIdSegmentsError,
  PostV1DatasetDocumentsByDocumentIdSegmentsResponse,
  PutV1DatasetDocumentsByDocumentIdEnableData,
  PutV1DatasetDocumentsByDocumentIdEnableError,
  PutV1DatasetDocumentsByDocumentIdEnableResponse,
  PutV1DatasetSegmentsBySegmentIdEnableData,
  PutV1DatasetSegmentsBySegmentIdEnableError,
  PutV1DatasetSegmentsBySegmentIdEnableResponse,
  GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextData,
  GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextError,
  GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextResponse,
  PutV1DatasetSegmentsBySegmentIdData,
  PutV1DatasetSegmentsBySegmentIdError,
  PutV1DatasetSegmentsBySegmentIdResponse,
  DeleteV1DatasetSegmentsBySegmentIdData,
  DeleteV1DatasetSegmentsBySegmentIdError,
  DeleteV1DatasetSegmentsBySegmentIdResponse,
  GetV1DatasetByIdRetrieveData,
  GetV1DatasetByIdRetrieveError,
  GetV1DatasetByIdRetrieveResponse,
  GetV1DatasetByIdApiKeyGenerateData,
  GetV1DatasetByIdApiKeyGenerateError,
  GetV1DatasetByIdApiKeyGenerateResponse,
  PostV1AgentGenerateApiKeyByIdData,
  PostV1AgentGenerateApiKeyByIdError,
  PostV1AgentGenerateApiKeyByIdResponse,
  PostV1DatasetDocumentsSplitData,
  PostV1DatasetDocumentsSplitError,
  PostV1DatasetDocumentsSplitResponse,
  DeleteV1DatasetSegmentsBatchDeleteData,
  DeleteV1DatasetSegmentsBatchDeleteError,
  DeleteV1DatasetSegmentsBatchDeleteResponse,
  GetV1DatasetListData,
  GetV1DatasetListError,
  GetV1DatasetListResponse,
  PostV1AgentResetSequenceByAgentIdData,
  PostV1AgentResetSequenceByAgentIdError,
  PostV1AgentResetSequenceByAgentIdResponse,
  GetV1DatasetByIdRetrieveExternalData,
  GetV1DatasetByIdRetrieveExternalError,
  GetV1DatasetByIdRetrieveExternalResponse,
  GetV1DatasetRetrieveHistoryByIdData,
  GetV1DatasetRetrieveHistoryByIdError,
  GetV1DatasetRetrieveHistoryByIdResponse,
  PostV1UserResetPwdCaptchaData,
  PostV1UserResetPwdCaptchaError,
  PostV1UserResetPwdCaptchaResponse,
  PostV1UserResetPwdCaptchaVerifyData,
  PostV1UserResetPwdCaptchaVerifyError,
  PostV1UserResetPwdCaptchaVerifyResponse,
  GetV1UserResetPwdByUuidData,
  GetV1UserResetPwdByUuidError,
  GetV1UserResetPwdByUuidResponse,
  PostV1UserResetPwdByUuidData,
  PostV1UserResetPwdByUuidError,
  PostV1UserResetPwdByUuidResponse,
  PostV1ChatAudioTranscriptionsData,
  PostV1ChatAudioTranscriptionsError,
  PostV1ChatAudioTranscriptionsResponse,
  PostV1ChatAudioSpeechData,
  PostV1ChatAudioSpeechError,
  PostV1ChatAudioSpeechResponse,
  PostV1UserResetPwdConfirmData,
  PostV1UserResetPwdConfirmError,
  PostV1UserResetPwdConfirmResponse,
} from './types.gen';

export const client = createClient(createConfig());

/**
 * 登录
 */
export const postV1AuthLogin = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AuthLoginData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1AuthLoginResponse, PostV1AuthLoginError>({
    ...options,
    url: '/v1/auth/login',
  });
};

/**
 * 初始化系统的登录
 */
export const postV1AuthLoginOfInit = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AuthLoginOfInitData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1AuthLoginOfInitResponse,
    PostV1AuthLoginOfInitError
  >({
    ...options,
    url: '/v1/auth/loginOfInit',
  });
};

/**
 * 系统初始化状态
 * 1-已初始化,0-未初始化
 */
export const getV1AuthInitStatus = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1AuthInitStatusResponse, GetV1AuthInitStatusError>(
    {
      ...options,
      url: '/v1/auth/initStatus',
    }
  );
};

/**
 * 工具列表
 */
export const getV1ToolList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ToolListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1ToolListResponse, GetV1ToolListError>({
    ...options,
    url: '/v1/tool/list',
  });
};

/**
 * 工具详细信息
 */
export const getV1ToolDetailById = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ToolDetailByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1ToolDetailByIdResponse, GetV1ToolDetailByIdError>(
    {
      ...options,
      url: '/v1/tool/detail/{id}',
    }
  );
};

/**
 * 新增工具
 */
export const postV1ToolAdd = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ToolAddData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1ToolAddResponse, PostV1ToolAddError>({
    ...options,
    url: '/v1/tool/add',
  });
};

/**
 * 修改工具
 */
export const putV1ToolUpdate = <ThrowOnError extends boolean = false>(
  options?: Options<PutV1ToolUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1ToolUpdateResponse, PutV1ToolUpdateError>({
    ...options,
    url: '/v1/tool/update',
  });
};

/**
 * 删除工具
 */
export const deleteV1ToolById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1ToolByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<ThrowOnError, DeleteV1ToolByIdResponse, DeleteV1ToolByIdError>({
    ...options,
    url: '/v1/tool/{id}',
  });
};

/**
 * 新建模型
 */
export const postV1ModelAdd = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ModelAddData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1ModelAddResponse, PostV1ModelAddError>({
    ...options,
    url: '/v1/model/add',
  });
};

/**
 * 删除模型
 */
export const deleteV1ModelById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1ModelByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<ThrowOnError, DeleteV1ModelByIdResponse, DeleteV1ModelByIdError>({
    ...options,
    url: '/v1/model/{id}',
  });
};

/**
 * 修改模型
 */
export const putV1ModelUpdate = <ThrowOnError extends boolean = false>(
  options: Options<PutV1ModelUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1ModelUpdateResponse, PutV1ModelUpdateError>({
    ...options,
    url: '/v1/model/update',
  });
};

/**
 * 模型列表
 */
export const getV1ModelList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ModelListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1ModelListResponse, GetV1ModelListError>({
    ...options,
    url: '/v1/model/list',
  });
};

/**
 * 创建工作空间
 */
export const postV1WorkspaceAdd = <ThrowOnError extends boolean = false>(
  options: Options<PostV1WorkspaceAddData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1WorkspaceAddResponse, PostV1WorkspaceAddError>({
    ...options,
    url: '/v1/workspace/add',
  });
};

/**
 * 当前账号加入的工作空间
 */
export const getV1WorkspaceList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkspaceListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1WorkspaceListResponse, GetV1WorkspaceListError>({
    ...options,
    url: '/v1/workspace/list',
  });
};

/**
 * 工作空间的成员列表
 */
export const getV1WorkspaceMemberList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkspaceMemberListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1WorkspaceMemberListResponse,
    GetV1WorkspaceMemberListError
  >({
    ...options,
    url: '/v1/workspace/memberList',
  });
};

/**
 * 新增工作空间成员
 */
export const postV1WorkspaceMember = <ThrowOnError extends boolean = false>(
  options: Options<PostV1WorkspaceMemberData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1WorkspaceMemberResponse,
    PostV1WorkspaceMemberError
  >({
    ...options,
    url: '/v1/workspace/member',
  });
};

/**
 * 删除工作空间成员
 */
export const deleteV1WorkspaceMemberByMemberId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1WorkspaceMemberByMemberIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1WorkspaceMemberByMemberIdResponse,
    DeleteV1WorkspaceMemberByMemberIdError
  >({
    ...options,
    url: '/v1/workspace/member/{memberId}',
  });
};

/**
 * 修改成员角色
 */
export const putV1WorkspaceMemberByMemberId = <ThrowOnError extends boolean = false>(
  options: Options<PutV1WorkspaceMemberByMemberIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1WorkspaceMemberByMemberIdResponse,
    PutV1WorkspaceMemberByMemberIdError
  >({
    ...options,
    url: '/v1/workspace/member/{memberId}',
  });
};

/**
 * 获取激活信息
 */
export const getV1WorkspaceActivateInfo = <ThrowOnError extends boolean = false>(
  options: Options<GetV1WorkspaceActivateInfoData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1WorkspaceActivateInfoResponse,
    GetV1WorkspaceActivateInfoError
  >({
    ...options,
    url: '/v1/workspace/activateInfo',
  });
};

/**
 * 通过激活链接加入(登录)
 */
export const postV1WorkspaceActivateMember = <ThrowOnError extends boolean = false>(
  options: Options<PostV1WorkspaceActivateMemberData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1WorkspaceActivateMemberResponse,
    PostV1WorkspaceActivateMemberError
  >({
    ...options,
    url: '/v1/workspace/activateMember',
  });
};

/**
 * agent详情
 */
export const getV1AgentById = <ThrowOnError extends boolean = false>(
  options: Options<GetV1AgentByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1AgentByIdResponse, GetV1AgentByIdError>({
    ...options,
    url: '/v1/agent/{id}',
  });
};

/**
 * 删除agent
 */
export const deleteV1AgentById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1AgentByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<ThrowOnError, DeleteV1AgentByIdResponse, DeleteV1AgentByIdError>({
    ...options,
    url: '/v1/agent/{id}',
  });
};

/**
 * 修改agent
 */
export const putV1AgentById = <ThrowOnError extends boolean = false>(
  options: Options<PutV1AgentByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1AgentByIdResponse, PutV1AgentByIdError>({
    ...options,
    url: '/v1/agent/{id}',
  });
};

/**
 * 新建agent
 */
export const postV1AgentAdd = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AgentAddData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1AgentAddResponse, PostV1AgentAddError>({
    ...options,
    url: '/v1/agent/add',
  });
};

/**
 * 开启或关闭分享状态
 */
export const postV1AgentEnableShareById = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AgentEnableShareByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1AgentEnableShareByIdResponse,
    PostV1AgentEnableShareByIdError
  >({
    ...options,
    url: '/v1/agent/enableShare/{id}',
  });
};

/**
 * @deprecated
 * chat
 */
export const getV1ChatStream = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ChatStreamData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1ChatStreamResponse, GetV1ChatStreamError>({
    ...options,
    url: '/v1/chat/stream',
  });
};

/**
 * 初始化会话
 */
export const postV1ChatInitSessionByAgentId = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatInitSessionByAgentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatInitSessionByAgentIdResponse,
    PostV1ChatInitSessionByAgentIdError
  >({
    ...options,
    url: '/v1/chat/initSession/{agentId}',
  });
};

/**
 * 获取当前用户的信息
 */
export const getV1UserInfo = <ThrowOnError extends boolean = false>(
  options: Options<GetV1UserInfoData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1UserInfoResponse, GetV1UserInfoError>({
    ...options,
    url: '/v1/user/info',
  });
};

/**
 * 修改用户信息
 */
export const putV1UserUpdate = <ThrowOnError extends boolean = false>(
  options: Options<PutV1UserUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1UserUpdateResponse, PutV1UserUpdateError>({
    ...options,
    url: '/v1/user/update',
  });
};

/**
 * 修改密码
 */
export const putV1UserUpdatePwd = <ThrowOnError extends boolean = false>(
  options: Options<PutV1UserUpdatePwdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1UserUpdatePwdResponse, PutV1UserUpdatePwdError>({
    ...options,
    url: '/v1/user/updatePwd',
  });
};

/**
 * agent列表
 */
export const getV1AgentList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1AgentListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1AgentListResponse, GetV1AgentListError>({
    ...options,
    url: '/v1/agent/list',
  });
};

/**
 * 初始化会话
 * <strong>适用于调试</strong>
 */
export const postV1ChatInitSession = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatInitSessionData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatInitSessionResponse,
    PostV1ChatInitSessionError
  >({
    ...options,
    url: '/v1/chat/initSession',
  });
};

/**
 * 最近聊天的agent
 */
export const getV1ChatRecentAgent = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ChatRecentAgentData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1ChatRecentAgentResponse,
    GetV1ChatRecentAgentError
  >({
    ...options,
    url: '/v1/chat/recentAgent',
  });
};

/**
 * agent聊天记录
 */
export const getV1ChatAgentChatByAgentId = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ChatAgentChatByAgentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1ChatAgentChatByAgentIdResponse,
    GetV1ChatAgentChatByAgentIdError
  >({
    ...options,
    url: '/v1/chat/agentChat/{agentId}',
  });
};

/**
 * @deprecated
 * 发送会话消息
 */
export const postV1ChatSendBySessionId = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatSendBySessionIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatSendBySessionIdResponse,
    PostV1ChatSendBySessionIdError
  >({
    ...options,
    url: '/v1/chat/send/{sessionId}',
  });
};

/**
 * agent列表(管理)
 */
export const getV1AgentAdminList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1AgentAdminListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1AgentAdminListResponse, GetV1AgentAdminListError>(
    {
      ...options,
      url: '/v1/agent/adminList',
    }
  );
};

/**
 * agent详情(管理)
 */
export const getV1AgentAdminInfoById = <ThrowOnError extends boolean = false>(
  options: Options<GetV1AgentAdminInfoByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1AgentAdminInfoByIdResponse,
    GetV1AgentAdminInfoByIdError
  >({
    ...options,
    url: '/v1/agent/adminInfo/{id}',
  });
};

/**
 * 发布
 */
export const putV1AgentReleaseById = <ThrowOnError extends boolean = false>(
  options: Options<PutV1AgentReleaseByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1AgentReleaseByIdResponse,
    PutV1AgentReleaseByIdError
  >({
    ...options,
    url: '/v1/agent/release/{id}',
  });
};

/**
 * 文件上传
 */
export const postV1FileUpload = <ThrowOnError extends boolean = false>(
  options: Options<PostV1FileUploadData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1FileUploadResponse, PostV1FileUploadError>({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
    },
    url: '/v1/file/upload',
  });
};

/**
 * 文件下载
 */
export const getV1FileDownload = <ThrowOnError extends boolean = false>(
  options: Options<GetV1FileDownloadData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1FileDownloadResponse, GetV1FileDownloadError>({
    ...options,
    url: '/v1/file/download',
  });
};

/**
 * 发送会话消息
 */
export const postV1ChatStreamBySessionId = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatStreamBySessionIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatStreamBySessionIdResponse,
    PostV1ChatStreamBySessionIdError
  >({
    ...options,
    url: '/v1/chat/stream/{sessionId}',
  });
};

/**
 * 清空会话信息
 * 退出agent界面时调用,清空上下文时调用
 */
export const postV1ChatClearSession = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatClearSessionData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatClearSessionResponse,
    PostV1ChatClearSessionError
  >({
    ...options,
    url: '/v1/chat/clearSession',
  });
};

/**
 * 检查工具schema是否有效
 */
export const postV1ToolCheckSchema = <ThrowOnError extends boolean = false>(
  options?: Options<PostV1ToolCheckSchemaData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ToolCheckSchemaResponse,
    PostV1ToolCheckSchemaError
  >({
    ...options,
    url: '/v1/tool/checkSchema',
  });
};

/**
 * 清空聊天记录
 */
export const postV1ChatClearDebugRecord = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatClearDebugRecordData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatClearDebugRecordResponse,
    PostV1ChatClearDebugRecordError
  >({
    ...options,
    url: '/v1/chat/clearDebugRecord',
  });
};

/**
 * 退出登录
 */
export const postV1AuthLogout = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AuthLogoutData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1AuthLogoutResponse, PostV1AuthLogoutError>({
    ...options,
    url: '/v1/auth/logout',
  });
};

/**
 * 工具列表(带function)
 */
export const getV1ToolListWithFunction = <ThrowOnError extends boolean = false>(
  options: Options<GetV1ToolListWithFunctionData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1ToolListWithFunctionResponse,
    GetV1ToolListWithFunctionError
  >({
    ...options,
    url: '/v1/tool/listWithFunction',
  });
};

/**
 * 创建一个新的知识库。
 */
export const postV1DatasetAdd = <ThrowOnError extends boolean = false>(
  options: Options<PostV1DatasetAddData, ThrowOnError>
) => {
  return (options?.client ?? client).post<ThrowOnError, PostV1DatasetAddResponse, PostV1DatasetAddError>({
    ...options,
    url: '/v1/dataset/add',
  });
};

/**
 * 通过ID获取知识库。
 */
export const getV1DatasetById = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1DatasetByIdResponse, GetV1DatasetByIdError>({
    ...options,
    url: '/v1/dataset/{id}',
  });
};

/**
 * 更新现有知识库。
 */
export const putV1DatasetById = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<ThrowOnError, PutV1DatasetByIdResponse, PutV1DatasetByIdError>({
    ...options,
    url: '/v1/dataset/{id}',
  });
};

/**
 * 通过ID删除知识库。
 */
export const deleteV1DatasetById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1DatasetByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1DatasetByIdResponse,
    DeleteV1DatasetByIdError
  >({
    ...options,
    url: '/v1/dataset/{id}',
  });
};

/**
 * List datasets associated with an agent.
 */
export const getV1DatasetListDatasetsByAgent = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetListDatasetsByAgentData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetListDatasetsByAgentResponse,
    GetV1DatasetListDatasetsByAgentError
  >({
    ...options,
    url: '/v1/dataset/listDatasetsByAgent',
  });
};

/**
 * 切换知识库共享状态。
 */
export const putV1DatasetByIdShare = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetByIdShareData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1DatasetByIdShareResponse,
    PutV1DatasetByIdShareError
  >({
    ...options,
    url: '/v1/dataset/{id}/share',
  });
};

/**
 * 检索记录
 */
export const getV1DatasetByIdRetrieveHistory = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByIdRetrieveHistoryData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetByIdRetrieveHistoryResponse,
    GetV1DatasetByIdRetrieveHistoryError
  >({
    ...options,
    url: '/v1/dataset/{id}/retrieve/history',
  });
};

/**
 * 创建新文档。
 */
export const postV1DatasetByDatasetIdDocuments = <ThrowOnError extends boolean = false>(
  options: Options<PostV1DatasetByDatasetIdDocumentsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1DatasetByDatasetIdDocumentsResponse,
    PostV1DatasetByDatasetIdDocumentsError
  >({
    ...options,
    url: '/v1/dataset/{datasetId}/documents',
  });
};

/**
 * 通过知识库ID获取文档。
 */
export const getV1DatasetByDatasetIdDocuments = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByDatasetIdDocumentsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetByDatasetIdDocumentsResponse,
    GetV1DatasetByDatasetIdDocumentsError
  >({
    ...options,
    url: '/v1/dataset/{datasetId}/documents',
  });
};

/**
 * 重命名文档。
 */
export const putV1DatasetDocumentsByDocumentIdRename = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetDocumentsByDocumentIdRenameData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1DatasetDocumentsByDocumentIdRenameResponse,
    PutV1DatasetDocumentsByDocumentIdRenameError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}/rename',
  });
};

/**
 * 通过ID删除文档。
 */
export const deleteV1DatasetDocumentsByDocumentId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1DatasetDocumentsByDocumentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1DatasetDocumentsByDocumentIdResponse,
    DeleteV1DatasetDocumentsByDocumentIdError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}',
  });
};

/**
 * 批量删除文档。
 */
export const deleteV1DatasetDocumentsBatchDelete = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1DatasetDocumentsBatchDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1DatasetDocumentsBatchDeleteResponse,
    DeleteV1DatasetDocumentsBatchDeleteError
  >({
    ...options,
    url: '/v1/dataset/documents/batchDelete',
  });
};

/**
 * 通过文档ID获取文档片段，带分页。
 */
export const getV1DatasetDocumentsByDocumentIdSegments = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetDocumentsByDocumentIdSegmentsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetDocumentsByDocumentIdSegmentsResponse,
    GetV1DatasetDocumentsByDocumentIdSegmentsError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}/segments',
  });
};

/**
 * 创建新片段。
 */
export const postV1DatasetDocumentsByDocumentIdSegments = <ThrowOnError extends boolean = false>(
  options: Options<PostV1DatasetDocumentsByDocumentIdSegmentsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1DatasetDocumentsByDocumentIdSegmentsResponse,
    PostV1DatasetDocumentsByDocumentIdSegmentsError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}/segments',
  });
};

/**
 * 切换文档启用状态。
 */
export const putV1DatasetDocumentsByDocumentIdEnable = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetDocumentsByDocumentIdEnableData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1DatasetDocumentsByDocumentIdEnableResponse,
    PutV1DatasetDocumentsByDocumentIdEnableError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}/enable',
  });
};

/**
 * 切换片段启用状态。
 */
export const putV1DatasetSegmentsBySegmentIdEnable = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetSegmentsBySegmentIdEnableData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1DatasetSegmentsBySegmentIdEnableResponse,
    PutV1DatasetSegmentsBySegmentIdEnableError
  >({
    ...options,
    url: '/v1/dataset/segments/{segmentId}/enable',
  });
};

/**
 * 通过文本搜索片段内容。
 */
export const getV1DatasetDocumentsByDocumentIdSegmentsSearchByText = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextResponse,
    GetV1DatasetDocumentsByDocumentIdSegmentsSearchByTextError
  >({
    ...options,
    url: '/v1/dataset/documents/{documentId}/segments/searchByText',
  });
};

/**
 * 通过ID更新片段。
 */
export const putV1DatasetSegmentsBySegmentId = <ThrowOnError extends boolean = false>(
  options: Options<PutV1DatasetSegmentsBySegmentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    ThrowOnError,
    PutV1DatasetSegmentsBySegmentIdResponse,
    PutV1DatasetSegmentsBySegmentIdError
  >({
    ...options,
    url: '/v1/dataset/segments/{segmentId}',
  });
};

/**
 * 通过ID删除片段。
 */
export const deleteV1DatasetSegmentsBySegmentId = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1DatasetSegmentsBySegmentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1DatasetSegmentsBySegmentIdResponse,
    DeleteV1DatasetSegmentsBySegmentIdError
  >({
    ...options,
    url: '/v1/dataset/segments/{segmentId}',
  });
};

/**
 * 召回测试
 */
export const getV1DatasetByIdRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByIdRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetByIdRetrieveResponse,
    GetV1DatasetByIdRetrieveError
  >({
    ...options,
    url: '/v1/dataset/{id}/retrieve',
  });
};

/**
 * 生成API Key
 */
export const getV1DatasetByIdApiKeyGenerate = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByIdApiKeyGenerateData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetByIdApiKeyGenerateResponse,
    GetV1DatasetByIdApiKeyGenerateError
  >({
    ...options,
    url: '/v1/dataset/{id}/apiKey/generate',
  });
};

/**
 * 生成agent ApiKey
 */
export const postV1AgentGenerateApiKeyById = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AgentGenerateApiKeyByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1AgentGenerateApiKeyByIdResponse,
    PostV1AgentGenerateApiKeyByIdError
  >({
    ...options,
    url: '/v1/agent/generateApiKey/{id}',
  });
};

/**
 * 预览将文档分割为片段。
 */
export const postV1DatasetDocumentsSplit = <ThrowOnError extends boolean = false>(
  options: Options<PostV1DatasetDocumentsSplitData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1DatasetDocumentsSplitResponse,
    PostV1DatasetDocumentsSplitError
  >({
    ...options,
    url: '/v1/dataset/documents/split',
  });
};

/**
 * 批量删除片段。
 */
export const deleteV1DatasetSegmentsBatchDelete = <ThrowOnError extends boolean = false>(
  options: Options<DeleteV1DatasetSegmentsBatchDeleteData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    ThrowOnError,
    DeleteV1DatasetSegmentsBatchDeleteResponse,
    DeleteV1DatasetSegmentsBatchDeleteError
  >({
    ...options,
    url: '/v1/dataset/segments/batchDelete',
  });
};

/**
 * 获取知识库的分页列表。
 */
export const getV1DatasetList = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<ThrowOnError, GetV1DatasetListResponse, GetV1DatasetListError>({
    ...options,
    url: '/v1/dataset/list',
  });
};

/**
 * 重置方法序列
 */
export const postV1AgentResetSequenceByAgentId = <ThrowOnError extends boolean = false>(
  options: Options<PostV1AgentResetSequenceByAgentIdData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1AgentResetSequenceByAgentIdResponse,
    PostV1AgentResetSequenceByAgentIdError
  >({
    ...options,
    url: '/v1/agent/resetSequence/{agentId}',
  });
};

/**
 * retrieveExternal
 */
export const getV1DatasetByIdRetrieveExternal = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetByIdRetrieveExternalData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetByIdRetrieveExternalResponse,
    GetV1DatasetByIdRetrieveExternalError
  >({
    ...options,
    url: '/v1/dataset/{id}/retrieve/external',
  });
};

/**
 * 检索记录 片段详情
 */
export const getV1DatasetRetrieveHistoryById = <ThrowOnError extends boolean = false>(
  options: Options<GetV1DatasetRetrieveHistoryByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1DatasetRetrieveHistoryByIdResponse,
    GetV1DatasetRetrieveHistoryByIdError
  >({
    ...options,
    url: '/v1/dataset/retrieve/history/{id}',
  });
};

/**
 * 重置密码-验证邮箱
 */
export const postV1UserResetPwdCaptcha = <ThrowOnError extends boolean = false>(
  options: Options<PostV1UserResetPwdCaptchaData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1UserResetPwdCaptchaResponse,
    PostV1UserResetPwdCaptchaError
  >({
    ...options,
    url: '/v1/user/resetPwd/captcha',
  });
};

/**
 * 重置密码-检查验证码
 */
export const postV1UserResetPwdCaptchaVerify = <ThrowOnError extends boolean = false>(
  options: Options<PostV1UserResetPwdCaptchaVerifyData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1UserResetPwdCaptchaVerifyResponse,
    PostV1UserResetPwdCaptchaVerifyError
  >({
    ...options,
    url: '/v1/user/resetPwd/captcha/verify',
  });
};

/**
 * 重置密码-验证链接
 */
export const getV1UserResetPwdByUuid = <ThrowOnError extends boolean = false>(
  options: Options<GetV1UserResetPwdByUuidData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ThrowOnError,
    GetV1UserResetPwdByUuidResponse,
    GetV1UserResetPwdByUuidError
  >({
    ...options,
    url: '/v1/user/resetPwd/{uuid}',
  });
};

/**
 * 重置密码
 */
export const postV1UserResetPwdByUuid = <ThrowOnError extends boolean = false>(
  options: Options<PostV1UserResetPwdByUuidData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1UserResetPwdByUuidResponse,
    PostV1UserResetPwdByUuidError
  >({
    ...options,
    url: '/v1/user/resetPwd/{uuid}',
  });
};

/**
 * 音频转文字
 */
export const postV1ChatAudioTranscriptions = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatAudioTranscriptionsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatAudioTranscriptionsResponse,
    PostV1ChatAudioTranscriptionsError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
    },
    url: '/v1/chat/audio/transcriptions',
  });
};

/**
 * 文字转音频
 */
export const postV1ChatAudioSpeech = <ThrowOnError extends boolean = false>(
  options: Options<PostV1ChatAudioSpeechData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1ChatAudioSpeechResponse,
    PostV1ChatAudioSpeechError
  >({
    ...options,
    url: '/v1/chat/audio/speech',
  });
};

/**
 * 重置密码
 */
export const postV1UserResetPwdConfirm = <ThrowOnError extends boolean = false>(
  options: Options<PostV1UserResetPwdConfirmData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ThrowOnError,
    PostV1UserResetPwdConfirmResponse,
    PostV1UserResetPwdConfirmError
  >({
    ...options,
    url: '/v1/user/resetPwd/confirm',
  });
};
