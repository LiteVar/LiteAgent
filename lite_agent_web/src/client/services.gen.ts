// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import {
    type PostV1AuthLoginData,
    type PostV1AuthLoginError,
    type PostV1AuthLoginResponse,
    type PostV1AuthLoginOfInitData,
    type PostV1AuthLoginOfInitError,
    type PostV1AuthLoginOfInitResponse,
    type GetV1AuthInitStatusError,
    type GetV1AuthInitStatusResponse,
    type GetV1ToolListData,
    type GetV1ToolListError,
    type GetV1ToolListResponse,
    type GetV1ToolDetailByIdData,
    type GetV1ToolDetailByIdError,
    type GetV1ToolDetailByIdResponse,
    type PostV1ToolAddData,
    type PostV1ToolAddError,
    type PostV1ToolAddResponse,
    type PutV1ToolUpdateData,
    type PutV1ToolUpdateError,
    type PutV1ToolUpdateResponse,
    type DeleteV1ToolByIdData,
    type DeleteV1ToolByIdError,
    type DeleteV1ToolByIdResponse,
    type PostV1ToolCheckSchemaData,
    type PostV1ToolCheckSchemaError,
    type PostV1ToolCheckSchemaResponse,
    type PostV1ModelAddData,
    type PostV1ModelAddError,
    type PostV1ModelAddResponse,
    type DeleteV1ModelByIdData,
    type DeleteV1ModelByIdError,
    type DeleteV1ModelByIdResponse,
    type PutV1ModelUpdateData,
    type PutV1ModelUpdateError,
    type PutV1ModelUpdateResponse,
    type GetV1ModelListData,
    type GetV1ModelListError,
    type GetV1ModelListResponse,
    type PostV1WorkspaceAddData,
    type PostV1WorkspaceAddError,
    type PostV1WorkspaceAddResponse,
    type GetV1WorkspaceListData,
    type GetV1WorkspaceListError,
    type GetV1WorkspaceListResponse,
    type GetV1WorkspaceMemberListData,
    type GetV1WorkspaceMemberListError,
    type GetV1WorkspaceMemberListResponse,
    type PostV1WorkspaceMemberData,
    type PostV1WorkspaceMemberError,
    type PostV1WorkspaceMemberResponse,
    type DeleteV1WorkspaceMemberByMemberIdData,
    type DeleteV1WorkspaceMemberByMemberIdError,
    type DeleteV1WorkspaceMemberByMemberIdResponse,
    type PutV1WorkspaceMemberByMemberIdData,
    type PutV1WorkspaceMemberByMemberIdError,
    type PutV1WorkspaceMemberByMemberIdResponse,
    type GetV1WorkspaceActivateInfoData,
    type GetV1WorkspaceActivateInfoError,
    type GetV1WorkspaceActivateInfoResponse,
    type PostV1WorkspaceActivateMemberData,
    type PostV1WorkspaceActivateMemberError,
    type PostV1WorkspaceActivateMemberResponse,
    type GetV1AgentListData,
    type GetV1AgentListError,
    type GetV1AgentListResponse,
    type GetV1AgentAdminListData,
    type GetV1AgentAdminListError,
    type GetV1AgentAdminListResponse,
    type GetV1AgentByIdData,
    type GetV1AgentByIdError,
    type GetV1AgentByIdResponse,
    type DeleteV1AgentByIdData,
    type DeleteV1AgentByIdError,
    type DeleteV1AgentByIdResponse,
    type PutV1AgentByIdData,
    type PutV1AgentByIdError,
    type PutV1AgentByIdResponse,
    type GetV1AgentAdminInfoByIdData,
    type GetV1AgentAdminInfoByIdError,
    type GetV1AgentAdminInfoByIdResponse,
    type PostV1AgentAddData,
    type PostV1AgentAddError,
    type PostV1AgentAddResponse,
    type PostV1AgentEnableShareByIdData,
    type PostV1AgentEnableShareByIdError,
    type PostV1AgentEnableShareByIdResponse,
    type PutV1AgentReleaseByIdData,
    type PutV1AgentReleaseByIdError,
    type PutV1AgentReleaseByIdResponse,
    type PostV1ChatInitSessionData,
    type PostV1ChatInitSessionError,
    type PostV1ChatInitSessionResponse,
    type GetV1ChatStreamData,
    type GetV1ChatStreamError,
    type GetV1ChatStreamResponse,
    type PostV1ChatInitSessionByAgentIdData,
    type PostV1ChatInitSessionByAgentIdError,
    type PostV1ChatInitSessionByAgentIdResponse,
    type PostV1ChatStreamBySessionIdData,
    type PostV1ChatStreamBySessionIdError,
    type PostV1ChatStreamBySessionIdResponse,
    type PostV1ChatClearSessionData,
    type PostV1ChatClearSessionError,
    type PostV1ChatClearSessionResponse,
    type PostV1ChatSendBySessionIdData,
    type PostV1ChatSendBySessionIdError,
    type PostV1ChatSendBySessionIdResponse,
    type PostV1ChatClearDebugRecordData,
    type PostV1ChatClearDebugRecordError,
    type PostV1ChatClearDebugRecordResponse,
    type GetV1ChatRecentAgentData,
    type GetV1ChatRecentAgentError,
    type GetV1ChatRecentAgentResponse,
    type GetV1ChatAgentChatByAgentIdData,
    type GetV1ChatAgentChatByAgentIdError,
    type GetV1ChatAgentChatByAgentIdResponse,
    type GetV1UserInfoData,
    type GetV1UserInfoError,
    type GetV1UserInfoResponse,
    type PutV1UserUpdateData,
    type PutV1UserUpdateError,
    type PutV1UserUpdateResponse,
    type PutV1UserUpdatePwdData,
    type PutV1UserUpdatePwdError,
    type PutV1UserUpdatePwdResponse,
    type PostV1FileUploadData,
    type PostV1FileUploadError,
    type PostV1FileUploadResponse,
    type GetV1FileDownloadData,
    type GetV1FileDownloadError,
    type GetV1FileDownloadResponse,
    GetV1ChatStreamResponseTransformer,
    PostV1ChatStreamBySessionIdResponseTransformer,
} from './types.gen';

export const client = createClient(createConfig());

/**
 * 登录
 */
export const postV1AuthLogin = <ThrowOnError extends boolean = false>(
    options: Options<PostV1AuthLoginData, ThrowOnError>
) => {
    return (options?.client ?? client).post<ThrowOnError, PostV1AuthLoginResponse, PostV1AuthLoginError>({
        ...options,
        url: '/v1/auth/login',
    });
};

/**
 * 初始化系统的登录
 */
export const postV1AuthLoginOfInit = <ThrowOnError extends boolean = false>(
    options: Options<PostV1AuthLoginOfInitData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1AuthLoginOfInitResponse,
        PostV1AuthLoginOfInitError
    >({
        ...options,
        url: '/v1/auth/loginOfInit',
    });
};

/**
 * 系统初始化状态
 * 1-已初始化,0-未初始化
 */
export const getV1AuthInitStatus = <ThrowOnError extends boolean = false>(
    options?: Options<unknown, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1AuthInitStatusResponse,
        GetV1AuthInitStatusError
    >({
        ...options,
        url: '/v1/auth/initStatus',
    });
};

/**
 * 工具列表
 */
export const getV1ToolList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ToolListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1ToolListResponse, GetV1ToolListError>({
        ...options,
        url: '/v1/tool/list',
    });
};

/**
 * 工具详细信息
 */
export const getV1ToolDetailById = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ToolDetailByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1ToolDetailByIdResponse,
        GetV1ToolDetailByIdError
    >({
        ...options,
        url: '/v1/tool/detail/{id}',
    });
};

/**
 * 新增工具
 */
export const postV1ToolAdd = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ToolAddData, ThrowOnError>
) => {
    return (options?.client ?? client).post<ThrowOnError, PostV1ToolAddResponse, PostV1ToolAddError>({
        ...options,
        url: '/v1/tool/add',
    });
};

/**
 * 修改工具
 */
export const putV1ToolUpdate = <ThrowOnError extends boolean = false>(
    options: Options<PutV1ToolUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<ThrowOnError, PutV1ToolUpdateResponse, PutV1ToolUpdateError>({
        ...options,
        url: '/v1/tool/update',
    });
};

/**
 * 删除工具
 */
export const deleteV1ToolById = <ThrowOnError extends boolean = false>(
    options: Options<DeleteV1ToolByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<ThrowOnError, DeleteV1ToolByIdResponse, DeleteV1ToolByIdError>({
        ...options,
        url: '/v1/tool/{id}',
    });
};

/**
 * 检查工具schema是否有效
 */
export const postV1ToolCheckSchema = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ToolCheckSchemaData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ToolCheckSchemaResponse,
        PostV1ToolCheckSchemaError
    >({
        ...options,
        url: '/v1/tool/checkSchema',
    });
};

/**
 * 新建模型
 */
export const postV1ModelAdd = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ModelAddData, ThrowOnError>
) => {
    return (options?.client ?? client).post<ThrowOnError, PostV1ModelAddResponse, PostV1ModelAddError>({
        ...options,
        url: '/v1/model/add',
    });
};

/**
 * 删除模型
 */
export const deleteV1ModelById = <ThrowOnError extends boolean = false>(
    options: Options<DeleteV1ModelByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        ThrowOnError,
        DeleteV1ModelByIdResponse,
        DeleteV1ModelByIdError
    >({
        ...options,
        url: '/v1/model/{id}',
    });
};

/**
 * 修改模型
 */
export const putV1ModelUpdate = <ThrowOnError extends boolean = false>(
    options: Options<PutV1ModelUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<ThrowOnError, PutV1ModelUpdateResponse, PutV1ModelUpdateError>({
        ...options,
        url: '/v1/model/update',
    });
};

/**
 * 模型列表
 */
export const getV1ModelList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ModelListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1ModelListResponse, GetV1ModelListError>({
        ...options,
        url: '/v1/model/list',
    });
};

/**
 * 创建工作空间
 */
export const postV1WorkspaceAdd = <ThrowOnError extends boolean = false>(
    options: Options<PostV1WorkspaceAddData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1WorkspaceAddResponse,
        PostV1WorkspaceAddError
    >({
        ...options,
        url: '/v1/workspace/add',
    });
};

/**
 * 当前账号加入的工作空间
 */
export const getV1WorkspaceList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1WorkspaceListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1WorkspaceListResponse, GetV1WorkspaceListError>(
        {
            ...options,
            url: '/v1/workspace/list',
        }
    );
};

/**
 * 工作空间的成员列表
 */
export const getV1WorkspaceMemberList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1WorkspaceMemberListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1WorkspaceMemberListResponse,
        GetV1WorkspaceMemberListError
    >({
        ...options,
        url: '/v1/workspace/memberList',
    });
};

/**
 * 新增工作空间成员
 */
export const postV1WorkspaceMember = <ThrowOnError extends boolean = false>(
    options: Options<PostV1WorkspaceMemberData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1WorkspaceMemberResponse,
        PostV1WorkspaceMemberError
    >({
        ...options,
        url: '/v1/workspace/member',
    });
};

/**
 * 删除工作空间成员
 */
export const deleteV1WorkspaceMemberByMemberId = <ThrowOnError extends boolean = false>(
    options: Options<DeleteV1WorkspaceMemberByMemberIdData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        ThrowOnError,
        DeleteV1WorkspaceMemberByMemberIdResponse,
        DeleteV1WorkspaceMemberByMemberIdError
    >({
        ...options,
        url: '/v1/workspace/member/{memberId}',
    });
};

/**
 * 修改成员角色
 */
export const putV1WorkspaceMemberByMemberId = <ThrowOnError extends boolean = false>(
    options: Options<PutV1WorkspaceMemberByMemberIdData, ThrowOnError>
) => {
    return (options?.client ?? client).put<
        ThrowOnError,
        PutV1WorkspaceMemberByMemberIdResponse,
        PutV1WorkspaceMemberByMemberIdError
    >({
        ...options,
        url: '/v1/workspace/member/{memberId}',
    });
};

/**
 * 获取激活信息
 */
export const getV1WorkspaceActivateInfo = <ThrowOnError extends boolean = false>(
    options: Options<GetV1WorkspaceActivateInfoData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1WorkspaceActivateInfoResponse,
        GetV1WorkspaceActivateInfoError
    >({
        ...options,
        url: '/v1/workspace/activateInfo',
    });
};

/**
 * 通过激活链接加入(登录)
 */
export const postV1WorkspaceActivateMember = <ThrowOnError extends boolean = false>(
    options: Options<PostV1WorkspaceActivateMemberData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1WorkspaceActivateMemberResponse,
        PostV1WorkspaceActivateMemberError
    >({
        ...options,
        url: '/v1/workspace/activateMember',
    });
};

/**
 * agent列表
 */
export const getV1AgentList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1AgentListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1AgentListResponse, GetV1AgentListError>({
        ...options,
        url: '/v1/agent/list',
    });
};

/**
 * agent列表(管理)
 */
export const getV1AgentAdminList = <ThrowOnError extends boolean = false>(
    options: Options<GetV1AgentAdminListData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1AgentAdminListResponse,
        GetV1AgentAdminListError
    >({
        ...options,
        url: '/v1/agent/adminList',
    });
};

/**
 * agent详情
 */
export const getV1AgentById = <ThrowOnError extends boolean = false>(
    options: Options<GetV1AgentByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1AgentByIdResponse, GetV1AgentByIdError>({
        ...options,
        url: '/v1/agent/{id}',
    });
};

/**
 * 删除agent
 */
export const deleteV1AgentById = <ThrowOnError extends boolean = false>(
    options: Options<DeleteV1AgentByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).delete<
        ThrowOnError,
        DeleteV1AgentByIdResponse,
        DeleteV1AgentByIdError
    >({
        ...options,
        url: '/v1/agent/{id}',
    });
};

/**
 * 修改agent
 */
export const putV1AgentById = <ThrowOnError extends boolean = false>(
    options: Options<PutV1AgentByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).put<ThrowOnError, PutV1AgentByIdResponse, PutV1AgentByIdError>({
        ...options,
        url: '/v1/agent/{id}',
    });
};

/**
 * agent详情(管理)
 */
export const getV1AgentAdminInfoById = <ThrowOnError extends boolean = false>(
    options: Options<GetV1AgentAdminInfoByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1AgentAdminInfoByIdResponse,
        GetV1AgentAdminInfoByIdError
    >({
        ...options,
        url: '/v1/agent/adminInfo/{id}',
    });
};

/**
 * 新建agent
 */
export const postV1AgentAdd = <ThrowOnError extends boolean = false>(
    options: Options<PostV1AgentAddData, ThrowOnError>
) => {
    return (options?.client ?? client).post<ThrowOnError, PostV1AgentAddResponse, PostV1AgentAddError>({
        ...options,
        url: '/v1/agent/add',
    });
};

/**
 * 开启或关闭分享状态
 */
export const postV1AgentEnableShareById = <ThrowOnError extends boolean = false>(
    options: Options<PostV1AgentEnableShareByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1AgentEnableShareByIdResponse,
        PostV1AgentEnableShareByIdError
    >({
        ...options,
        url: '/v1/agent/enableShare/{id}',
    });
};

/**
 * 发布
 */
export const putV1AgentReleaseById = <ThrowOnError extends boolean = false>(
    options: Options<PutV1AgentReleaseByIdData, ThrowOnError>
) => {
    return (options?.client ?? client).put<
        ThrowOnError,
        PutV1AgentReleaseByIdResponse,
        PutV1AgentReleaseByIdError
    >({
        ...options,
        url: '/v1/agent/release/{id}',
    });
};

/**
 * 初始化会话
 * <strong>适用于调试</strong>
 */
export const postV1ChatInitSession = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatInitSessionData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatInitSessionResponse,
        PostV1ChatInitSessionError
    >({
        ...options,
        url: '/v1/chat/initSession',
    });
};

/**
 * @deprecated
 * chat
 */
export const getV1ChatStream = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ChatStreamData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1ChatStreamResponse, GetV1ChatStreamError>({
        ...options,
        url: '/v1/chat/stream',
        responseTransformer: GetV1ChatStreamResponseTransformer,
    });
};

/**
 * 初始化会话
 */
export const postV1ChatInitSessionByAgentId = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatInitSessionByAgentIdData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatInitSessionByAgentIdResponse,
        PostV1ChatInitSessionByAgentIdError
    >({
        ...options,
        url: '/v1/chat/initSession/{agentId}',
    });
};

/**
 * 发送会话消息
 */
export const postV1ChatStreamBySessionId = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatStreamBySessionIdData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatStreamBySessionIdResponse,
        PostV1ChatStreamBySessionIdError
    >({
        ...options,
        url: '/v1/chat/stream/{sessionId}',
        responseTransformer: PostV1ChatStreamBySessionIdResponseTransformer,
    });
};

/**
 * 清空会话信息
 * 退出agent界面时调用,清空上下文时调用
 */
export const postV1ChatClearSession = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatClearSessionData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatClearSessionResponse,
        PostV1ChatClearSessionError
    >({
        ...options,
        url: '/v1/chat/clearSession',
    });
};

/**
 * @deprecated
 * 发送会话消息
 */
export const postV1ChatSendBySessionId = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatSendBySessionIdData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatSendBySessionIdResponse,
        PostV1ChatSendBySessionIdError
    >({
        ...options,
        url: '/v1/chat/send/{sessionId}',
    });
};

/**
 * 清空调试记录
 */
export const postV1ChatClearDebugRecord = <ThrowOnError extends boolean = false>(
    options: Options<PostV1ChatClearDebugRecordData, ThrowOnError>
) => {
    return (options?.client ?? client).post<
        ThrowOnError,
        PostV1ChatClearDebugRecordResponse,
        PostV1ChatClearDebugRecordError
    >({
        ...options,
        url: '/v1/chat/clearDebugRecord',
    });
};

/**
 * 最近聊天的agent
 */
export const getV1ChatRecentAgent = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ChatRecentAgentData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1ChatRecentAgentResponse,
        GetV1ChatRecentAgentError
    >({
        ...options,
        url: '/v1/chat/recentAgent',
    });
};

/**
 * agent聊天记录
 */
export const getV1ChatAgentChatByAgentId = <ThrowOnError extends boolean = false>(
    options: Options<GetV1ChatAgentChatByAgentIdData, ThrowOnError>
) => {
    return (options?.client ?? client).get<
        ThrowOnError,
        GetV1ChatAgentChatByAgentIdResponse,
        GetV1ChatAgentChatByAgentIdError
    >({
        ...options,
        url: '/v1/chat/agentChat/{agentId}',
    });
};

/**
 * 获取当前用户的信息
 */
export const getV1UserInfo = <ThrowOnError extends boolean = false>(
    options: Options<GetV1UserInfoData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1UserInfoResponse, GetV1UserInfoError>({
        ...options,
        url: '/v1/user/info',
    });
};

/**
 * 修改用户信息
 */
export const putV1UserUpdate = <ThrowOnError extends boolean = false>(
    options: Options<PutV1UserUpdateData, ThrowOnError>
) => {
    return (options?.client ?? client).put<ThrowOnError, PutV1UserUpdateResponse, PutV1UserUpdateError>({
        ...options,
        url: '/v1/user/update',
    });
};

/**
 * 修改密码
 */
export const putV1UserUpdatePwd = <ThrowOnError extends boolean = false>(
    options: Options<PutV1UserUpdatePwdData, ThrowOnError>
) => {
    return (options?.client ?? client).put<ThrowOnError, PutV1UserUpdatePwdResponse, PutV1UserUpdatePwdError>(
        {
            ...options,
            url: '/v1/user/updatePwd',
        }
    );
};

/**
 * 文件上传
 */
export const postV1FileUpload = <ThrowOnError extends boolean = false>(
    options: Options<PostV1FileUploadData, ThrowOnError>
) => {
    return (options?.client ?? client).post<ThrowOnError, PostV1FileUploadResponse, PostV1FileUploadError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
        },
        url: '/v1/file/upload',
    });
};

/**
 * 文件下载
 */
export const getV1FileDownload = <ThrowOnError extends boolean = false>(
    options: Options<GetV1FileDownloadData, ThrowOnError>
) => {
    return (options?.client ?? client).get<ThrowOnError, GetV1FileDownloadResponse, GetV1FileDownloadError>({
        ...options,
        url: '/v1/file/download',
    });
};
